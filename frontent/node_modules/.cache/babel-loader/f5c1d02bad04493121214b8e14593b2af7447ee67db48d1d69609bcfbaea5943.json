{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\Email-Checker\\\\frontend\\\\src\\\\pages\\\\DashboardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Search } from \"lucide-react\";\nimport axios from \"axios\";\nimport Badge from './compontents/Badge';\nimport Spinner from './compontents/Spinner';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport api from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  inbox: \"bg-green-100 text-green-800\",\n  spam: \"bg-red-100 text-red-800\"\n};\nconst DashboardPage = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [inbox, setInbox] = useState(0);\n  const [spam, setSpam] = useState(0);\n  const [percent_inbox, setPercentInbox] = useState(0);\n  const [percent_spam, setPercentSpam] = useState(0);\n  const [emailSections, setResults] = useState([]);\n  const [emailList, setEmailList] = useState([]);\n  const containerRefs = useRef([]);\n  const hasFetched = useRef(false);\n  const onSearchClick = async e => {\n    try {\n      setLoading(true);\n      setResults([]);\n      setInbox(0);\n      setSpam(0);\n      for (const item of emailList) {\n        let email = item.email;\n        api.post(\"/api/check\", {\n          search,\n          email\n        }).then(res => {\n          if (res.data.status === 'OK') {\n            setResults(prev => [...prev, res.data.results]);\n            setInbox(prev => prev + Number(res.data.results.inbox));\n            setSpam(prev => prev + Number(res.data.results.spam));\n          } else {\n            alert(\"Invalid credentials or search result not found.\");\n          }\n        }).catch(error => {\n          console.error(\"API Error:\", error);\n          alert(\"Request failed. Check console for details.\");\n        });\n      }\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        var _err$response;\n        console.error(\"Axios error:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        alert(\"A server error occurred. Please try again.\");\n      } else {\n        console.error(\"Unexpected error:\", err);\n        alert(\"An unknown error occurred.\");\n      }\n    }\n  };\n  const fetchEmailList = async () => {\n    try {\n      // setLoading\n      const res = await api.get(\"/api/emails\");\n      if (res.data.status == 'OK') {\n        setEmailList(res.data.results);\n      } else {\n        alert(\"No emails found.\");\n      }\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        var _err$response2;\n        console.error(\"Axios error:\", ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n        alert(\"A server error occurred. Please try again.\");\n      } else {\n        console.error(\"Unexpected error:\", err);\n        alert(\"An unknown error occurred.\");\n      }\n    } finally {\n      // setLoading(false);\n    }\n  };\n  const onLogout = () => {\n    api.post(\"/api/logout\").then(res => {\n      if (res.data.status === \"OK\") {\n        localStorage.removeItem(\"token\");\n        window.location.href = \"/\";\n      } else {\n        alert(\"Logout failed.\");\n      }\n    }).catch(err => {\n      console.error(\"Logout error:\", err);\n      alert(\"A server error occurred. Please try again.\");\n    });\n  };\n  useEffect(() => {\n    if (hasFetched.current) return; // Prevent re-run\n    hasFetched.current = true;\n    fetchEmailList();\n  }, []);\n  useEffect(() => {\n    let all_box = inbox + spam;\n    let p_inbox = all_box > 0 ? Number((inbox / all_box * 100).toFixed(2)) : 0;\n    let p_spam = all_box > 0 ? Number((spam / all_box * 100).toFixed(2)) : 0;\n    setPercentInbox(p_inbox);\n    setPercentSpam(p_spam);\n  }, [inbox, spam]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end w-full bg-[#174866] p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md bg-white rounded shadow overflow-hidden flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter name or email and press enter\",\n          value: search,\n          readOnly: loading,\n          required: true,\n          onChange: e => setSearch(e.target.value),\n          className: \"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading,\n          onClick: onSearchClick,\n          className: \"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            className: \"text-white w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: onLogout,\n          className: \"p-1 w-10 h-10 rounded-full overflow-hidden p-0 bg-transparent border-none hover:opacity-80 transition\",\n          title: \"Logout\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/user.jpg\" // <-- your image path\n            ,\n            alt: \"Logout\",\n            className: \"w-full h-full object-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-6 justify-center my-8\",\n      children: [/*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"Inbox\",\n        value: percent_inbox,\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"Spam\",\n        value: percent_spam,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), emailList.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-500 mt-8\",\n      children: \"No emails found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), emailList.map((row, blockIndex) => {\n      let emailSection = emailSections.filter(item => item.email === row.email);\n      let emailInfo = emailSection.length > 0 ? emailSection[0].results : [];\n      let emailType = emailSection.length > 0 ? emailSection[0].type : \"_\";\n      // sort by date\n      emailInfo = [...emailInfo].sort((a, b) => {\n        const dateA = a.date ? new Date(a.date).getTime() : 0;\n        const dateB = b.date ? new Date(b.date).getTime() : 0;\n        return dateB - dateA;\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-6 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[300px] flex flex-col bg-gray-200 p-4 rounded-xl flex-shrink-0 items-center justify-center \",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/gmail.png\",\n            alt: \"icon\",\n            className: \"max-w-full max-h-40 object-contain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base mt-2 text-center\",\n            children: row.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `font-bold text-sm text-center ${emailType == 'valid' ? 'text-green-500' : 'text-red-500'}`,\n            children: emailType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Swiper, {\n            modules: [Navigation, Pagination],\n            spaceBetween: 20,\n            slidesPerView: 4,\n            navigation: true,\n            pagination: {\n              clickable: true\n            },\n            loop: false,\n            className: \"w-full\",\n            breakpoints: {\n              320: {\n                slidesPerView: 1\n              },\n              // Mobile\n              640: {\n                slidesPerView: 2\n              },\n              // Tablet\n              1024: {\n                slidesPerView: 4\n              } // Desktop\n            },\n            children: [emailInfo.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 border rounded-xl p-12 text-gray-500\",\n              children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 32\n              }, this) : \"No recent emails found from this sender or email.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), emailInfo.map((item, index) => {\n              const status = item.type || \"inbox\"; // Default to 'inbox' if type is not defined\n              const colorClass = statusColors[status] || \"bg-gray-100 text-gray-800\"; // Fallback color\n              return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `p-2 px-[10px] pb-[10px] border rounded-lg shadow ${colorClass}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"text-lg text-gray-900\",\n                    children: item.sender_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-700\",\n                    children: [\"---\", item.sender_email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"line-clamp-1 text-sm text-gray-700\",\n                    children: [\"Subject: \", item.subject]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"line-clamp-1 text-sm text-gray-700\",\n                    children: [\"Description: \", item.text]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: /*#__PURE__*/_jsxDEV(Badge, {\n                        text: item.type,\n                        color: item.type == 'inbox' ? 'green' : 'red'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 30\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-xs tracking-wide uppercase\",\n                      children: item.diff_time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, blockIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"ePUC/+s9OLYabDPsUD3cm6N6EfY=\");\n_c = DashboardPage;\nconst colorMap = {\n  red: {\n    border: \"border-red-500\",\n    text: \"text-red-700\"\n  },\n  green: {\n    border: \"border-green-500\",\n    text: \"text-green-700\"\n  },\n  blue: {\n    border: \"border-blue-500\",\n    text: \"text-blue-700\"\n  }\n};\nfunction StatCircle({\n  label,\n  value,\n  color\n}) {\n  const radius = 45;\n  const stroke = 10;\n  const normalizedRadius = radius - stroke / 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - value / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-24 h-24 flex items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"100%\",\n      width: \"100%\",\n      className: \"rotate-[-90deg]\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: \"#e5e7eb\" // gray-200\n        ,\n        fill: \"transparent\",\n        strokeWidth: stroke,\n        r: normalizedRadius,\n        cx: \"48\",\n        cy: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: color // Fallback if dynamic color fails\n        ,\n        className: `stroke-${color}-500` // Tailwind dynamic stroke\n        ,\n        fill: \"transparent\",\n        strokeWidth: stroke,\n        strokeDasharray: circumference,\n        strokeDashoffset: strokeDashoffset,\n        strokeLinecap: \"round\",\n        r: normalizedRadius,\n        cx: \"48\",\n        cy: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute text-center text-sm font-semibold text-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [value, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n}\n_c2 = StatCircle;\nexport default DashboardPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"DashboardPage\");\n$RefreshReg$(_c2, \"StatCircle\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Search","axios","Badge","Spinner","Swiper","SwiperSlide","Navigation","Pagination","api","jsxDEV","_jsxDEV","statusColors","inbox","spam","DashboardPage","_s","loading","setLoading","search","setSearch","setInbox","setSpam","percent_inbox","setPercentInbox","percent_spam","setPercentSpam","emailSections","setResults","emailList","setEmailList","containerRefs","hasFetched","onSearchClick","e","item","email","post","then","res","data","status","prev","results","Number","alert","catch","error","console","err","isAxiosError","_err$response","response","message","fetchEmailList","get","_err$response2","onLogout","localStorage","removeItem","window","location","href","current","all_box","p_inbox","toFixed","p_spam","className","children","type","placeholder","value","readOnly","required","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","title","src","alt","StatCircle","label","color","length","map","row","blockIndex","emailSection","filter","emailInfo","emailType","sort","a","b","dateA","date","Date","getTime","dateB","modules","spaceBetween","slidesPerView","navigation","pagination","clickable","loop","breakpoints","index","colorClass","sender_name","sender_email","subject","text","diff_time","_c","colorMap","red","border","green","blue","radius","stroke","normalizedRadius","circumference","Math","PI","strokeDashoffset","height","width","fill","strokeWidth","r","cx","cy","strokeDasharray","strokeLinecap","_c2","$RefreshReg$"],"sources":["D:/work/Email-Checker/frontend/src/pages/DashboardPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport { Search } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nimport Badge from './compontents/Badge'\r\nimport Spinner from './compontents/Spinner'\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Navigation, Pagination } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css/pagination\";\r\nimport api from \"./Api\";\r\nimport EmailList from \"./EmailList\";\r\n\r\n\r\n\r\n\r\n\r\nconst statusColors: Record<string, string> = {\r\n  inbox: \"bg-green-100 text-green-800\",\r\n  spam: \"bg-red-100 text-red-800\",\r\n};\r\n\r\ntype EmailResultItem = {\r\n  type?: string;\r\n  diff_time: string;\r\n  date?: Date;\r\n  text: string;\r\n  sender_name: string;\r\n  sender_email: string;\r\n  subject: string;\r\n};\r\n\r\ntype EmailSection = {\r\n  email: string;\r\n  results: EmailResultItem[];\r\n  inbox?: number;\r\n  spam?: number;\r\n  type?: string;\r\n};\r\n\r\ntype Email = {\r\n  id: number,\r\n  email: string;\r\n  name?: string;\r\n  status?: string;\r\n}\r\n\r\nconst DashboardPage = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [inbox, setInbox] = useState<number>(0);\r\n  const [spam, setSpam] = useState<number>(0);\r\n\r\n  const [percent_inbox, setPercentInbox] = useState<number>(0);\r\n  const [percent_spam, setPercentSpam] = useState<number>(0);\r\n  const [emailSections, setResults] = useState<EmailSection[]>([]);\r\n  const [emailList, setEmailList] = useState<Email[]>([]);\r\n  const containerRefs = useRef<Array<HTMLDivElement | null>>([]);\r\n  const hasFetched = useRef(false);\r\n\r\n  const onSearchClick = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    try {\r\n      setLoading(true);\r\n      setResults([]);\r\n      setInbox(0);\r\n      setSpam(0);\r\n\r\n      for (const item of emailList) {\r\n        let email = item.email;\r\n        api.post(\"/api/check\", { search, email })\r\n          .then((res) => {\r\n            if (res.data.status === 'OK') {\r\n              setResults(prev => [...prev, res.data.results]);\r\n              setInbox(prev => prev + Number(res.data.results.inbox));\r\n              setSpam(prev => prev + Number(res.data.results.spam));\r\n\r\n            } else {\r\n              alert(\"Invalid credentials or search result not found.\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"API Error:\", error);\r\n            alert(\"Request failed. Check console for details.\");\r\n          });\r\n      }\r\n\r\n\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        console.error(\"Axios error:\", err.response?.data || err.message);\r\n        alert(\"A server error occurred. Please try again.\");\r\n      } else {\r\n        console.error(\"Unexpected error:\", err);\r\n        alert(\"An unknown error occurred.\");\r\n      }\r\n    } \r\n  };\r\n\r\n  const fetchEmailList = async () => {\r\n    try {\r\n      // setLoading\r\n      const res = await api.get(\"/api/emails\");\r\n\r\n      if (res.data.status == 'OK') {\r\n        setEmailList(res.data.results);\r\n      } else {\r\n        alert(\"No emails found.\");\r\n      }\r\n\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        console.error(\"Axios error:\", err.response?.data || err.message);\r\n        alert(\"A server error occurred. Please try again.\");\r\n      } else {\r\n        console.error(\"Unexpected error:\", err);\r\n        alert(\"An unknown error occurred.\");\r\n      }\r\n    } finally {\r\n      // setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onLogout = () => {\r\n    api.post(\"/api/logout\")\r\n      .then((res) => {\r\n        if (res.data.status === \"OK\") {\r\n          localStorage.removeItem(\"token\");\r\n          window.location.href = \"/\";\r\n        } else {\r\n          alert(\"Logout failed.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Logout error:\", err);\r\n        alert(\"A server error occurred. Please try again.\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (hasFetched.current) return; // Prevent re-run\r\n    hasFetched.current = true;\r\n    fetchEmailList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let all_box = inbox + spam;\r\n    let p_inbox = all_box > 0 ? Number(((inbox / all_box) * 100).toFixed(2)) : 0;\r\n    let p_spam = all_box > 0 ? Number(((spam / all_box) * 100).toFixed(2)) : 0;\r\n    setPercentInbox(p_inbox);\r\n    setPercentSpam(p_spam);\r\n  }, [inbox,spam]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-end w-full bg-[#174866] p-4\">\r\n\r\n\r\n        <div className=\"w-full max-w-md bg-white rounded shadow overflow-hidden flex\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter name or email and press enter\"\r\n            value={search}\r\n            readOnly={loading}\r\n            required={true}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"\r\n          />\r\n          <button\r\n            disabled={loading}\r\n            onClick={onSearchClick}\r\n            className=\"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\"\r\n          >\r\n            <Search className=\"text-white w-4 h-4\" />\r\n          </button>\r\n          <a\r\n            onClick={onLogout}\r\n            className=\"p-1 w-10 h-10 rounded-full overflow-hidden p-0 bg-transparent border-none hover:opacity-80 transition\"\r\n            title=\"Logout\"\r\n          >\r\n            <img\r\n              src=\"/user.jpg\"  // <-- your image path\r\n              alt=\"Logout\"\r\n              className=\"w-full h-full object-cover\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats */}\r\n      <div className=\"flex flex-wrap gap-6 justify-center my-8\">\r\n        <StatCircle label=\"Inbox\" value={percent_inbox} color=\"green\" />\r\n        <StatCircle label=\"Spam\" value={percent_spam} color=\"red\" />\r\n      </div>\r\n\r\n      {/* Email Sections */}\r\n      {emailList.length === 0 && (\r\n        <div className=\"text-center text-gray-500 mt-8\">\r\n          No emails found.\r\n        </div>\r\n      )}\r\n\r\n      {emailList.map((row: Email, blockIndex) => {\r\n        let emailSection = emailSections.filter((item) => item.email === row.email);\r\n        let emailInfo = emailSection.length > 0 ? emailSection[0].results : [];\r\n        let emailType = emailSection.length > 0 ? emailSection[0].type : \"_\";\r\n        // sort by date\r\n        emailInfo = [...emailInfo].sort((a, b) => {\r\n          const dateA = a.date ? new Date(a.date).getTime() : 0;\r\n          const dateB = b.date ? new Date(b.date).getTime() : 0;\r\n          return dateB - dateA;\r\n        })\r\n\r\n        return (\r\n          <div key={blockIndex} className=\"flex items-center gap-6 p-4\">\r\n            {/* Left static card */}\r\n            <div className=\"w-[300px] flex flex-col bg-gray-200 p-4 rounded-xl flex-shrink-0 items-center justify-center \">\r\n              <img src=\"/gmail.png\" alt=\"icon\" className=\"max-w-full max-h-40 object-contain\" />\r\n              <p className=\"text-base mt-2 text-center\">{row.email}</p>\r\n              <p className={`font-bold text-sm text-center ${emailType == 'valid' ? 'text-green-500' : 'text-red-500'}`}>{emailType}</p>\r\n            </div>\r\n\r\n            {/* Right scrollable section */}\r\n            <div className=\"flex-1 overflow-hidden\">\r\n              <Swiper\r\n                modules={[Navigation, Pagination]}\r\n                spaceBetween={20}\r\n                slidesPerView={4}\r\n                navigation\r\n                pagination={{ clickable: true }}\r\n                loop={false}\r\n                className=\"w-full\"\r\n                breakpoints={{\r\n                  320: { slidesPerView: 1 },  // Mobile\r\n                  640: { slidesPerView: 2 },  // Tablet\r\n                  1024: { slidesPerView: 4 }, // Desktop\r\n                }}\r\n              >\r\n                {emailInfo.length === 0 && (\r\n                  <div className=\"flex-1 border rounded-xl p-12 text-gray-500\">\r\n                    {loading ? <Spinner /> : \"No recent emails found from this sender or email.\"}\r\n                  </div>\r\n                )}\r\n                {emailInfo.map((item: EmailResultItem, index: number) => {\r\n                  const status = item.type || \"inbox\"; // Default to 'inbox' if type is not defined\r\n                  const colorClass = statusColors[status] || \"bg-gray-100 text-gray-800\"; // Fallback color\r\n                  return (\r\n                    <SwiperSlide key={index}>\r\n                      <div className={`p-2 px-[10px] pb-[10px] border rounded-lg shadow ${colorClass}`}\r\n                      >\r\n                        <h1 className=\"text-lg text-gray-900\">{item.sender_name}</h1>\r\n                        <p className=\"text-sm text-gray-700\">---{item.sender_email}</p>\r\n                        <p className=\"line-clamp-1 text-sm text-gray-700\">Subject: {item.subject}</p>\r\n                        <p className=\"line-clamp-1 text-sm text-gray-700\">Description: {item.text}</p>\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <p><Badge text={item.type} color={item.type == 'inbox' ? 'green' : 'red'} /></p>\r\n                          <p className=\"text-xs tracking-wide uppercase\">{item.diff_time}</p>\r\n                        </div>\r\n                      </div>\r\n                    </SwiperSlide>\r\n                  );\r\n                })}\r\n              </Swiper>\r\n            </div>\r\n          </div>)\r\n      })}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\ntype Color = \"red\" | \"green\" | \"blue\";\r\n\r\ninterface StatCircleProps {\r\n  label: string;\r\n  value: number;\r\n  color: Color;\r\n}\r\n\r\nconst colorMap = {\r\n  red: {\r\n    border: \"border-red-500\",\r\n    text: \"text-red-700\",\r\n  },\r\n  green: {\r\n    border: \"border-green-500\",\r\n    text: \"text-green-700\",\r\n  },\r\n  blue: {\r\n    border: \"border-blue-500\",\r\n    text: \"text-blue-700\",\r\n  },\r\n};\r\n\r\nfunction StatCircle({ label, value, color }: StatCircleProps) {\r\n  const radius = 45;\r\n  const stroke = 10;\r\n  const normalizedRadius = radius - stroke / 2;\r\n  const circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset =\r\n    circumference - (value / 100) * circumference;\r\n\r\n  return (\r\n    <div className=\"relative w-24 h-24 flex items-center justify-center\">\r\n      <svg\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        className=\"rotate-[-90deg]\"\r\n      >\r\n        {/* Background circle */}\r\n        <circle\r\n          stroke=\"#e5e7eb\" // gray-200\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n        {/* Progress circle */}\r\n        <circle\r\n          stroke={color} // Fallback if dynamic color fails\r\n          className={`stroke-${color}-500`} // Tailwind dynamic stroke\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={strokeDashoffset}\r\n          strokeLinecap=\"round\"\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n      </svg>\r\n\r\n      {/* Center Text */}\r\n      <div className=\"absolute text-center text-sm font-semibold text-black\">\r\n        <p>{label}</p>\r\n        <p>{value}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}