{"ast":null,"code":"var _jsxFileName = \"D:\\\\Python\\\\Freelancer\\\\Email-Checker\\\\frontend\\\\src\\\\pages\\\\DashboardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { Search } from \"lucide-react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emails = [{\n  name: \"Shannon Ledford\",\n  emails: [\"shannon@laveaocl.com\", \"spikexarger@gmail.com\"],\n  status: \"inbox\",\n  time: \"25 mins ago\"\n}, {\n  name: \"BRIX ROBERTS\",\n  emails: [\"ErikRabra@gmail.com\", \"ErikRoberts@examplex.com\"],\n  status: \"spam\",\n  time: \"53 mins ago\"\n}, {\n  name: \"Rodney Jones\",\n  emails: [\"RoaneyJD@gmail.com\", \"TerryJBabertse@examples.com\"],\n  status: \"inbox\",\n  time: \"75 mins ago\"\n}, {\n  name: \"Amanda Flitsch\",\n  emails: [\"Lauren.P-e@gmail.com\", \"Shannon@eomples.com\"],\n  status: \"spam\",\n  time: \"27 mins ago\"\n}, {\n  name: \"BRIX ROBERTS\",\n  emails: [\"ErikRabra@gmail.com\", \"ErikRoberts@examplex.com\"],\n  status: \"spam\",\n  time: \"53 mins ago\"\n}, {\n  name: \"Rodney Jones\",\n  emails: [\"RoaneyJD@gmail.com\", \"TerryJBabertse@examples.com\"],\n  status: \"inbox\",\n  time: \"75 mins ago\"\n}, {\n  name: \"Amanda Flitsch\",\n  emails: [\"Lauren.P-e@gmail.com\", \"Shannon@eomples.com\"],\n  status: \"spam\",\n  time: \"27 mins ago\"\n}, {\n  name: \"Kim Woodruff\",\n  emails: [\"ErikWoodult@gail.com\"],\n  status: \"spam\",\n  time: \"35 mins ago\"\n}, {\n  name: \"CYNDI B RICE\",\n  emails: [\"Shannonngl@gmail.com\"],\n  status: \"spam\",\n  time: \"25 mins ago\"\n}];\nconst emailSections = [{\n  title: \"Leads from Website\",\n  emails: [{\n    name: \"Alice\",\n    emails: [\"alice@example.com\"],\n    status: \"inbox\",\n    time: \"1 min ago\"\n  }, {\n    name: \"Bob\",\n    emails: [\"bob@spam.com\"],\n    status: \"spam\",\n    time: \"3 mins ago\"\n  }]\n}, {\n  title: \"Newsletter Subscriptions\",\n  emails: [{\n    name: \"Charlie\",\n    emails: [\"charlie@news.com\"],\n    status: \"inbox\",\n    time: \"10 mins ago\"\n  }, {\n    name: \"Dana\",\n    emails: [\"dana@junk.com\"],\n    status: \"spam\",\n    time: \"15 mins ago\"\n  }]\n}, {\n  title: \"Support Tickets\",\n  emails: [{\n    name: \"Eve\",\n    emails: [\"eve@support.com\"],\n    status: \"inbox\",\n    time: \"20 mins ago\"\n  }]\n}\n// ... up to 10 different sections\n];\nconst statusColors = {\n  inbox: \"bg-green-100 text-green-800\",\n  spam: \"bg-red-100 text-red-800\"\n};\nconst DashboardPage = () => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [inbox, setInbox] = useState(0);\n  const [spam, setSpam] = useState(0);\n  const [nofind, setNofind] = useState(0);\n  const [results, setResults] = useState([]);\n  const containerRefs = useRef([]);\n  const percentage = 75;\n  const radius = 50;\n  const stroke = 10;\n  const normalizedRadius = radius - stroke / 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - percentage / 100 * circumference;\n  const onSearchClick = async e => {\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/check\", {\n        search\n      });\n      if (res.data.results) {\n        setResults(prev => [...prev, res.data.results]);\n        setInbox(res.data.p_inbox);\n        console.log(inbox);\n        setSpam(res.data.p_spam);\n        setNofind(res.data.p_nofind);\n      } else {\n        // Handle when no token is returned\n        alert(\"Invalid credentials or search result not found.\");\n      }\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        var _err$response;\n        console.error(\"Axios error:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        alert(\"A server error occurred. Please try again.\");\n      } else {\n        console.error(\"Unexpected error:\", err);\n        alert(\"An unknown error occurred.\");\n      }\n    }\n  };\n\n  // useEffect(() => {\n  //   setSearch(\"gistangjie@outlook.com\");\n  // }, []);\n\n  const scroll = (index, direction) => {\n    const container = containerRefs.current[index];\n    if (container) {\n      const scrollAmount = 300;\n      container.scrollBy({\n        left: direction === \"left\" ? -scrollAmount : scrollAmount,\n        behavior: \"smooth\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end w-full bg-[#174866] p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md bg-white rounded shadow overflow-hidden flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter keyword or email and press enter\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          className: \"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSearchClick,\n          className: \"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            className: \"text-white w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-6 justify-center my-8\",\n      children: [/*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"Inbox\",\n        value: inbox,\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"Spam\",\n        value: spam,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"NotFound\",\n        value: nofind,\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), emailSections.map((section, blockIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-item flex flex-col lg:flex-row gap-4 items-start mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full sm:w-[250px] h-[130px] p-2 px-[10px] pb-[10px] border rounded-lg shadow flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/gmail.png\",\n          alt: \"icon\",\n          className: \"w-[60px] mt-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-base mt-2 text-center\",\n          children: \"radugistang1@gmail.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-center text-green-700 font-bold\",\n          children: \"valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => scroll(blockIndex, \"left\"),\n          className: \"absolute left-2 top-1/2 transform -translate-y-1/2 z-10 bg-slate-200 shadow p-2 rounded-full hover:bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: el => {\n            containerRefs.current[blockIndex] = el;\n          },\n          className: \"overflow-x-auto whitespace-nowrap scroll-smooth scrollbar-hide w-full px-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-4 min-w-max snap-x\",\n            children: section.emails.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-[250px] sm:w-[270px] h-[130px] border snap-start p-4 rounded-lg shadow ${item.status === \"inbox\" ? \"bg-green-100\" : \"bg-red-100\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-bold text-gray-800 mb-1\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-700 space-y-1 mb-2\",\n                children: item.emails.map((email, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: email\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"truncate\",\n                children: \"laskdjflsakdfjlsadkjflasdkfjlasdkj...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center text-sm mt-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-3 py-1 rounded-lg text-xs font-semibold ${item.status === \"inbox\" ? \"bg-green-600 text-white\" : \"bg-red-600 text-white\"}`,\n                  children: item.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500 text-xs\",\n                  children: item.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this)]\n            }, `${blockIndex}-${idx}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => scroll(blockIndex, \"right\"),\n          className: \"absolute right-2 top-1/2 transform -translate-y-1/2 z-10 bg-slate-200 shadow p-2 rounded-full hover:bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, blockIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"AHu4+J7xBSXN9nEe6uiCW2nBz40=\");\n_c = DashboardPage;\nconst colorMap = {\n  red: {\n    border: \"border-red-500\",\n    text: \"text-red-700\"\n  },\n  green: {\n    border: \"border-green-500\",\n    text: \"text-green-700\"\n  },\n  blue: {\n    border: \"border-blue-500\",\n    text: \"text-blue-700\"\n  }\n};\nfunction StatCircle({\n  label,\n  value,\n  color\n}) {\n  const radius = 45;\n  const stroke = 10;\n  const normalizedRadius = radius - stroke / 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - value / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-24 h-24 flex items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"100%\",\n      width: \"100%\",\n      className: \"rotate-[-90deg]\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: \"#e5e7eb\" // gray-200\n        ,\n        fill: \"transparent\",\n        strokeWidth: stroke,\n        r: normalizedRadius,\n        cx: \"48\",\n        cy: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: color // Fallback if dynamic color fails\n        ,\n        className: `stroke-${color}-500` // Tailwind dynamic stroke\n        ,\n        fill: \"transparent\",\n        strokeWidth: stroke,\n        strokeDasharray: circumference,\n        strokeDashoffset: strokeDashoffset,\n        strokeLinecap: \"round\",\n        r: normalizedRadius,\n        cx: \"48\",\n        cy: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute text-center text-sm font-semibold text-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [value, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n}\n_c2 = StatCircle;\nexport default DashboardPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"DashboardPage\");\n$RefreshReg$(_c2, \"StatCircle\");","map":{"version":3,"names":["React","useState","useRef","ChevronLeft","ChevronRight","Search","axios","jsxDEV","_jsxDEV","emails","name","status","time","emailSections","title","statusColors","inbox","spam","DashboardPage","_s","search","setSearch","setInbox","setSpam","nofind","setNofind","results","setResults","containerRefs","percentage","radius","stroke","normalizedRadius","circumference","Math","PI","strokeDashoffset","onSearchClick","e","res","post","data","prev","p_inbox","console","log","p_spam","p_nofind","alert","err","isAxiosError","_err$response","error","response","message","scroll","index","direction","container","current","scrollAmount","scrollBy","left","behavior","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","StatCircle","label","color","map","section","blockIndex","src","alt","ref","el","item","idx","email","i","_c","colorMap","red","border","text","green","blue","height","width","fill","strokeWidth","r","cx","cy","strokeDasharray","strokeLinecap","_c2","$RefreshReg$"],"sources":["D:/Python/Freelancer/Email-Checker/frontend/src/pages/DashboardPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport { Search } from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\nconst emails = [\r\n  {\r\n    name: \"Shannon Ledford\",\r\n    emails: [\"shannon@laveaocl.com\", \"spikexarger@gmail.com\"],\r\n    status: \"inbox\",\r\n    time: \"25 mins ago\",\r\n  },\r\n  {\r\n    name: \"BRIX ROBERTS\",\r\n    emails: [\"ErikRabra@gmail.com\", \"ErikRoberts@examplex.com\"],\r\n    status: \"spam\",\r\n    time: \"53 mins ago\",\r\n  },\r\n  {\r\n    name: \"Rodney Jones\",\r\n    emails: [\"RoaneyJD@gmail.com\", \"TerryJBabertse@examples.com\"],\r\n    status: \"inbox\",\r\n    time: \"75 mins ago\",\r\n  },\r\n  {\r\n    name: \"Amanda Flitsch\",\r\n    emails: [\"Lauren.P-e@gmail.com\", \"Shannon@eomples.com\"],\r\n    status: \"spam\",\r\n    time: \"27 mins ago\",\r\n  },\r\n  {\r\n    name: \"BRIX ROBERTS\",\r\n    emails: [\"ErikRabra@gmail.com\", \"ErikRoberts@examplex.com\"],\r\n    status: \"spam\",\r\n    time: \"53 mins ago\",\r\n  },\r\n  {\r\n    name: \"Rodney Jones\",\r\n    emails: [\"RoaneyJD@gmail.com\", \"TerryJBabertse@examples.com\"],\r\n    status: \"inbox\",\r\n    time: \"75 mins ago\",\r\n  },\r\n  {\r\n    name: \"Amanda Flitsch\",\r\n    emails: [\"Lauren.P-e@gmail.com\", \"Shannon@eomples.com\"],\r\n    status: \"spam\",\r\n    time: \"27 mins ago\",\r\n  },\r\n  {\r\n    name: \"Kim Woodruff\",\r\n    emails: [\"ErikWoodult@gail.com\"],\r\n    status: \"spam\",\r\n    time: \"35 mins ago\",\r\n  },\r\n  {\r\n    name: \"CYNDI B RICE\",\r\n    emails: [\"Shannonngl@gmail.com\"],\r\n    status: \"spam\",\r\n    time: \"25 mins ago\",\r\n  },\r\n];\r\n\r\nconst emailSections = [\r\n  {\r\n    title: \"Leads from Website\",\r\n    emails: [\r\n      { name: \"Alice\", emails: [\"alice@example.com\"], status: \"inbox\", time: \"1 min ago\" },\r\n      { name: \"Bob\", emails: [\"bob@spam.com\"], status: \"spam\", time: \"3 mins ago\" },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Newsletter Subscriptions\",\r\n    emails: [\r\n      { name: \"Charlie\", emails: [\"charlie@news.com\"], status: \"inbox\", time: \"10 mins ago\" },\r\n      { name: \"Dana\", emails: [\"dana@junk.com\"], status: \"spam\", time: \"15 mins ago\" },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Support Tickets\",\r\n    emails: [\r\n      { name: \"Eve\", emails: [\"eve@support.com\"], status: \"inbox\", time: \"20 mins ago\" },\r\n    ],\r\n  },\r\n  // ... up to 10 different sections\r\n];\r\n\r\n\r\nconst statusColors: Record<string, string> = {\r\n  inbox: \"bg-green-100 text-green-800\",\r\n  spam: \"bg-red-100 text-red-800\",\r\n};\r\n\r\nconst DashboardPage = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [inbox, setInbox] = useState(0);\r\n  const [spam, setSpam] = useState(0);\r\n  const [nofind, setNofind] = useState(0);\r\n  const [results, setResults] = useState<string[]>([]);\r\n  const containerRefs = useRef<Array<HTMLDivElement | null>>([]);\r\n\r\n  const percentage = 75;\r\n\r\n  const radius = 50;\r\n  const stroke = 10;\r\n  const normalizedRadius = radius - stroke / 2;\r\n  const circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset = circumference - (percentage / 100) * circumference;\r\n\r\n  const onSearchClick = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/check\", {\r\n        search\r\n      });\r\n\r\n      if (res.data.results) {\r\n        setResults((prev) => [...prev, res.data.results]);\r\n        setInbox(res.data.p_inbox);\r\n        console.log(inbox)\r\n        setSpam(res.data.p_spam);\r\n        setNofind(res.data.p_nofind);\r\n      } else {\r\n        // Handle when no token is returned\r\n        alert(\"Invalid credentials or search result not found.\");\r\n      }\r\n\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        console.error(\"Axios error:\", err.response?.data || err.message);\r\n        alert(\"A server error occurred. Please try again.\");\r\n      } else {\r\n        console.error(\"Unexpected error:\", err);\r\n        alert(\"An unknown error occurred.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setSearch(\"gistangjie@outlook.com\");\r\n  // }, []);\r\n\r\n  const scroll = (index: number, direction: \"left\" | \"right\") => {\r\n    const container = containerRefs.current[index];\r\n    if (container) {\r\n      const scrollAmount = 300;\r\n      container.scrollBy({\r\n        left: direction === \"left\" ? -scrollAmount : scrollAmount,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-4\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-end w-full bg-[#174866] p-4\">\r\n        <div className=\"w-full max-w-md bg-white rounded shadow overflow-hidden flex\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter keyword or email and press enter\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n\r\n            className=\"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"\r\n          />\r\n          <button\r\n            onClick={onSearchClick}\r\n            className=\"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\"\r\n          >\r\n            <Search className=\"text-white w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats */}\r\n      <div className=\"flex flex-wrap gap-6 justify-center my-8\">\r\n        <StatCircle label=\"Inbox\" value={inbox} color=\"green\" />\r\n        <StatCircle label=\"Spam\" value={spam} color=\"red\" />\r\n        <StatCircle label=\"NotFound\" value={nofind} color=\"blue\" />\r\n      </div>\r\n\r\n      {emailSections.map((section, blockIndex) => (\r\n        <div key={blockIndex} className=\"message-item flex flex-col lg:flex-row gap-4 items-start mb-6\">\r\n          {/* Left static card */}\r\n          <div className=\"w-full sm:w-[250px] h-[130px] p-2 px-[10px] pb-[10px] border rounded-lg shadow flex flex-col items-center\">\r\n            <img src=\"/gmail.png\" alt=\"icon\" className=\"w-[60px] mt-3\" />\r\n            <p className=\"text-base mt-2 text-center\">radugistang1@gmail.com</p>\r\n            <p className=\"text-sm text-center text-green-700 font-bold\">valid</p>\r\n          </div>\r\n\r\n          {/* Scrollable area with arrows */}\r\n          <div className=\"relative w-full flex items-center\">\r\n            {/* Left Button */}\r\n            <button\r\n              onClick={() => scroll(blockIndex, \"left\")}\r\n              className=\"absolute left-2 top-1/2 transform -translate-y-1/2 z-10 bg-slate-200 shadow p-2 rounded-full hover:bg-gray-100\"\r\n            >\r\n              <ChevronLeft className=\"w-5 h-5\" />\r\n            </button>\r\n\r\n            {/* Scrollable Area */}\r\n            <div\r\n              ref={(el) => {\r\n                containerRefs.current[blockIndex] = el;\r\n              }}\r\n              className=\"overflow-x-auto whitespace-nowrap scroll-smooth scrollbar-hide w-full px-5\"\r\n            >\r\n              <div className=\"flex gap-4 min-w-max snap-x\">\r\n                {section.emails.map((item, idx) => (\r\n                  <div\r\n                    key={`${blockIndex}-${idx}`}\r\n                    className={`w-[250px] sm:w-[270px] h-[130px] border snap-start p-4 rounded-lg shadow ${item.status === \"inbox\" ? \"bg-green-100\" : \"bg-red-100\"\r\n                      }`}\r\n                  >\r\n                    <h3 className=\"font-bold text-gray-800 mb-1\">{item.name}</h3>\r\n                    <div className=\"text-sm text-gray-700 space-y-1 mb-2\">\r\n                      {item.emails.map((email, i) => (\r\n                        <p key={i}>{email}</p>\r\n                      ))}\r\n                    </div>\r\n                    <p className=\"truncate\">laskdjflsakdfjlsadkjflasdkfjlasdkj...</p>\r\n                    <div className=\"flex justify-between items-center text-sm mt-1\">\r\n                      <span\r\n                        className={`px-3 py-1 rounded-lg text-xs font-semibold ${item.status === \"inbox\" ? \"bg-green-600 text-white\" : \"bg-red-600 text-white\"\r\n                          }`}\r\n                      >\r\n                        {item.status}\r\n                      </span>\r\n                      <span className=\"text-gray-500 text-xs\">{item.time}</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Right Button */}\r\n            <button\r\n              onClick={() => scroll(blockIndex, \"right\")}\r\n              className=\"absolute right-2 top-1/2 transform -translate-y-1/2 z-10 bg-slate-200 shadow p-2 rounded-full hover:bg-gray-100\"\r\n            >\r\n              <ChevronRight className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\ntype Color = \"red\" | \"green\" | \"blue\";\r\n\r\ninterface StatCircleProps {\r\n  label: string;\r\n  value: number;\r\n  color: Color;\r\n}\r\n\r\nconst colorMap = {\r\n  red: {\r\n    border: \"border-red-500\",\r\n    text: \"text-red-700\",\r\n  },\r\n  green: {\r\n    border: \"border-green-500\",\r\n    text: \"text-green-700\",\r\n  },\r\n  blue: {\r\n    border: \"border-blue-500\",\r\n    text: \"text-blue-700\",\r\n  },\r\n};\r\n\r\nfunction StatCircle({ label, value, color }: StatCircleProps) {\r\n  const radius = 45;\r\n  const stroke = 10;\r\n  const normalizedRadius = radius - stroke / 2;\r\n  const circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset =\r\n    circumference - (value / 100) * circumference;\r\n\r\n  return (\r\n    <div className=\"relative w-24 h-24 flex items-center justify-center\">\r\n      <svg\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        className=\"rotate-[-90deg]\"\r\n      >\r\n        {/* Background circle */}\r\n        <circle\r\n          stroke=\"#e5e7eb\" // gray-200\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n        {/* Progress circle */}\r\n        <circle\r\n          stroke={color} // Fallback if dynamic color fails\r\n          className={`stroke-${color}-500`} // Tailwind dynamic stroke\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={strokeDashoffset}\r\n          strokeLinecap=\"round\"\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n      </svg>\r\n\r\n      {/* Center Text */}\r\n      <div className=\"absolute text-center text-sm font-semibold text-black\">\r\n        <p>{label}</p>\r\n        <p>{value}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}