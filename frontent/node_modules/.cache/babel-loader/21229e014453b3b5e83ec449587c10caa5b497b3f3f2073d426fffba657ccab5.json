{"ast":null,"code":"var _jsxFileName = \"D:\\\\Python\\\\Freelancer\\\\Email-Checker\\\\frontend\\\\src\\\\pages\\\\DashboardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Search } from \"lucide-react\";\nimport axios from \"axios\";\n\n// const emailSections = [\n//   {\n//     title: \"Leads from Website\",\n//     emails: [\n//       { name: \"Alice\", emails: [\"alice@example.com\"], status: \"inbox\", time: \"1 min ago\" },\n//       { name: \"Bob\", emails: [\"bob@spam.com\"], status: \"spam\", time: \"3 mins ago\" },\n//     ],\n//   },\n//   {\n//     title: \"Newsletter Subscriptions\",\n//     emails: [\n//       { name: \"Charlie\", emails: [\"charlie@news.com\"], status: \"inbox\", time: \"10 mins ago\" },\n//       { name: \"Dana\", emails: [\"dana@junk.com\"], status: \"spam\", time: \"15 mins ago\" },\n//     ],\n//   },\n//   {\n//     title: \"Support Tickets\",\n//     emails: [\n//       { name: \"Eve\", emails: [\"eve@support.com\"], status: \"inbox\", time: \"20 mins ago\" },\n//     ],\n//   },\n//   // ... up to 10 different sections\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  inbox: \"bg-green-100 text-green-800\",\n  spam: \"bg-red-100 text-red-800\"\n};\nconst DashboardPage = () => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [inbox, setInbox] = useState(0);\n  const [spam, setSpam] = useState(0);\n  const [nofind, setNofind] = useState(0);\n  const [emailSections, setResults] = useState([]);\n  const containerRefs = useRef([]);\n  const percentage = 75;\n  const radius = 50;\n  const stroke = 10;\n  const normalizedRadius = radius - stroke / 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - percentage / 100 * circumference;\n  const onSearchClick = async e => {\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/check\", {\n        search\n      });\n      if (res.data.status == 'OK') {\n        setResults(prev => [...prev, res.data.results]);\n        setInbox(res.data.inbox);\n        setSpam(res.data.spam);\n        setNofind(res.data.nofind);\n      } else {\n        // Handle when no token is returned\n        alert(\"Invalid credentials or search result not found.\");\n      }\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        var _err$response;\n        console.error(\"Axios error:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        alert(\"A server error occurred. Please try again.\");\n      } else {\n        console.error(\"Unexpected error:\", err);\n        alert(\"An unknown error occurred.\");\n      }\n    }\n  };\n\n  // useEffect(() => {\n  //   setSearch(\"gistangjie@outlook.com\");\n  // }, []);\n\n  const scroll = (index, direction) => {\n    const container = containerRefs.current[index];\n    if (container) {\n      const scrollAmount = 300;\n      container.scrollBy({\n        left: direction === \"left\" ? -scrollAmount : scrollAmount,\n        behavior: \"smooth\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end w-full bg-[#174866] p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md bg-white rounded shadow overflow-hidden flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter keyword or email and press enter\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          className: \"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSearchClick,\n          className: \"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            className: \"text-white w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-6 justify-center my-8\",\n      children: [/*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"Inbox\",\n        value: inbox,\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"Spam\",\n        value: spam,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"NotFound\",\n        value: nofind,\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), emailSections.map((section, blockIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-item flex flex-col lg:flex-row gap-4 items-start mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full sm:w-[250px] h-[130px] p-2 px-[10px] pb-[10px] border rounded-lg shadow flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/gmail.png\",\n          alt: \"icon\",\n          className: \"w-[60px] mt-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-base mt-2 text-center\",\n          children: section.account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-center text-green-700 font-bold\",\n          children: \"valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, blockIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"RIqGi6zdxd1vyqHixyrPaF7PFto=\");\n_c = DashboardPage;\nconst colorMap = {\n  red: {\n    border: \"border-red-500\",\n    text: \"text-red-700\"\n  },\n  green: {\n    border: \"border-green-500\",\n    text: \"text-green-700\"\n  },\n  blue: {\n    border: \"border-blue-500\",\n    text: \"text-blue-700\"\n  }\n};\nfunction StatCircle({\n  label,\n  value,\n  color\n}) {\n  const radius = 45;\n  const stroke = 10;\n  const normalizedRadius = radius - stroke / 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - value / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-24 h-24 flex items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"100%\",\n      width: \"100%\",\n      className: \"rotate-[-90deg]\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: \"#e5e7eb\" // gray-200\n        ,\n        fill: \"transparent\",\n        strokeWidth: stroke,\n        r: normalizedRadius,\n        cx: \"48\",\n        cy: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: color // Fallback if dynamic color fails\n        ,\n        className: `stroke-${color}-500` // Tailwind dynamic stroke\n        ,\n        fill: \"transparent\",\n        strokeWidth: stroke,\n        strokeDasharray: circumference,\n        strokeDashoffset: strokeDashoffset,\n        strokeLinecap: \"round\",\n        r: normalizedRadius,\n        cx: \"48\",\n        cy: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute text-center text-sm font-semibold text-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [value, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_c2 = StatCircle;\nexport default DashboardPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"DashboardPage\");\n$RefreshReg$(_c2, \"StatCircle\");","map":{"version":3,"names":["React","useState","useRef","Search","axios","jsxDEV","_jsxDEV","statusColors","inbox","spam","DashboardPage","_s","search","setSearch","setInbox","setSpam","nofind","setNofind","emailSections","setResults","containerRefs","percentage","radius","stroke","normalizedRadius","circumference","Math","PI","strokeDashoffset","onSearchClick","e","res","post","data","status","prev","results","alert","err","isAxiosError","_err$response","console","error","response","message","scroll","index","direction","container","current","scrollAmount","scrollBy","left","behavior","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","StatCircle","label","color","map","section","blockIndex","src","alt","account","_c","colorMap","red","border","text","green","blue","height","width","fill","strokeWidth","r","cx","cy","strokeDasharray","strokeLinecap","_c2","$RefreshReg$"],"sources":["D:/Python/Freelancer/Email-Checker/frontend/src/pages/DashboardPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport { Search } from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n// const emailSections = [\r\n//   {\r\n//     title: \"Leads from Website\",\r\n//     emails: [\r\n//       { name: \"Alice\", emails: [\"alice@example.com\"], status: \"inbox\", time: \"1 min ago\" },\r\n//       { name: \"Bob\", emails: [\"bob@spam.com\"], status: \"spam\", time: \"3 mins ago\" },\r\n//     ],\r\n//   },\r\n//   {\r\n//     title: \"Newsletter Subscriptions\",\r\n//     emails: [\r\n//       { name: \"Charlie\", emails: [\"charlie@news.com\"], status: \"inbox\", time: \"10 mins ago\" },\r\n//       { name: \"Dana\", emails: [\"dana@junk.com\"], status: \"spam\", time: \"15 mins ago\" },\r\n//     ],\r\n//   },\r\n//   {\r\n//     title: \"Support Tickets\",\r\n//     emails: [\r\n//       { name: \"Eve\", emails: [\"eve@support.com\"], status: \"inbox\", time: \"20 mins ago\" },\r\n//     ],\r\n//   },\r\n//   // ... up to 10 different sections\r\n// ];\r\n\r\n\r\nconst statusColors: Record<string, string> = {\r\n  inbox: \"bg-green-100 text-green-800\",\r\n  spam: \"bg-red-100 text-red-800\",\r\n};\r\n\r\nconst DashboardPage = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [inbox, setInbox] = useState(0);\r\n  const [spam, setSpam] = useState(0);\r\n  const [nofind, setNofind] = useState(0);\r\n  const [emailSections, setResults] = useState<string[]>([]);\r\n  const containerRefs = useRef<Array<HTMLDivElement | null>>([]);\r\n\r\n  const percentage = 75;\r\n\r\n  const radius = 50;\r\n  const stroke = 10;\r\n  const normalizedRadius = radius - stroke / 2;\r\n  const circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset = circumference - (percentage / 100) * circumference;\r\n\r\n  const onSearchClick = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/check\", {\r\n        search\r\n      });\r\n\r\n      if (res.data.status == 'OK') {\r\n        setResults((prev) => [...prev, res.data.results]);\r\n        setInbox(res.data.inbox);\r\n        setSpam(res.data.spam);\r\n        setNofind(res.data.nofind);\r\n      } else {\r\n        // Handle when no token is returned\r\n        alert(\"Invalid credentials or search result not found.\");\r\n      }\r\n\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        console.error(\"Axios error:\", err.response?.data || err.message);\r\n        alert(\"A server error occurred. Please try again.\");\r\n      } else {\r\n        console.error(\"Unexpected error:\", err);\r\n        alert(\"An unknown error occurred.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setSearch(\"gistangjie@outlook.com\");\r\n  // }, []);\r\n\r\n  const scroll = (index: number, direction: \"left\" | \"right\") => {\r\n    const container = containerRefs.current[index];\r\n    if (container) {\r\n      const scrollAmount = 300;\r\n      container.scrollBy({\r\n        left: direction === \"left\" ? -scrollAmount : scrollAmount,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-4\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-end w-full bg-[#174866] p-4\">\r\n        <div className=\"w-full max-w-md bg-white rounded shadow overflow-hidden flex\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter keyword or email and press enter\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n\r\n            className=\"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"\r\n          />\r\n          <button\r\n            onClick={onSearchClick}\r\n            className=\"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\"\r\n          >\r\n            <Search className=\"text-white w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats */}\r\n      <div className=\"flex flex-wrap gap-6 justify-center my-8\">\r\n        <StatCircle label=\"Inbox\" value={inbox} color=\"green\" />\r\n        <StatCircle label=\"Spam\" value={spam} color=\"red\" />\r\n        <StatCircle label=\"NotFound\" value={nofind} color=\"blue\" />\r\n      </div>\r\n\r\n      {emailSections.map((section, blockIndex) => (\r\n        <div key={blockIndex} className=\"message-item flex flex-col lg:flex-row gap-4 items-start mb-6\">\r\n          {/* Left static card */}\r\n          <div className=\"w-full sm:w-[250px] h-[130px] p-2 px-[10px] pb-[10px] border rounded-lg shadow flex flex-col items-center\">\r\n            <img src=\"/gmail.png\" alt=\"icon\" className=\"w-[60px] mt-3\" />\r\n            <p className=\"text-base mt-2 text-center\">{section.account}</p>\r\n            <p className=\"text-sm text-center text-green-700 font-bold\">valid</p>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\ntype Color = \"red\" | \"green\" | \"blue\";\r\n\r\ninterface StatCircleProps {\r\n  label: string;\r\n  value: number;\r\n  color: Color;\r\n}\r\n\r\nconst colorMap = {\r\n  red: {\r\n    border: \"border-red-500\",\r\n    text: \"text-red-700\",\r\n  },\r\n  green: {\r\n    border: \"border-green-500\",\r\n    text: \"text-green-700\",\r\n  },\r\n  blue: {\r\n    border: \"border-blue-500\",\r\n    text: \"text-blue-700\",\r\n  },\r\n};\r\n\r\nfunction StatCircle({ label, value, color }: StatCircleProps) {\r\n  const radius = 45;\r\n  const stroke = 10;\r\n  const normalizedRadius = radius - stroke / 2;\r\n  const circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset =\r\n    circumference - (value / 100) * circumference;\r\n\r\n  return (\r\n    <div className=\"relative w-24 h-24 flex items-center justify-center\">\r\n      <svg\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        className=\"rotate-[-90deg]\"\r\n      >\r\n        {/* Background circle */}\r\n        <circle\r\n          stroke=\"#e5e7eb\" // gray-200\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n        {/* Progress circle */}\r\n        <circle\r\n          stroke={color} // Fallback if dynamic color fails\r\n          className={`stroke-${color}-500`} // Tailwind dynamic stroke\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={strokeDashoffset}\r\n          strokeLinecap=\"round\"\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n      </svg>\r\n\r\n      {/* Center Text */}\r\n      <div className=\"absolute text-center text-sm font-semibold text-black\">\r\n        <p>{label}</p>\r\n        <p>{value}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}