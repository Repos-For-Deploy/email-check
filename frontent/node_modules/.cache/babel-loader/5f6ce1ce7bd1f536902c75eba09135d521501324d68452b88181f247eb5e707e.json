{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\Email-Checker\\\\frontend\\\\src\\\\pages\\\\DashboardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Search } from \"lucide-react\";\nimport axios from \"axios\";\nimport Badge from './compontents/Badge';\nimport Spinner from './compontents/Spinner';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Navigation, Pagination } from \"swiper/modules\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport api from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  inbox: \"bg-green-100 text-green-800\",\n  spam: \"bg-red-100 text-red-800\"\n};\nconst DashboardPage = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [inbox, setInbox] = useState(0);\n  const [spam, setSpam] = useState(0);\n  const [emailSections, setResults] = useState([]);\n  const [emailList, setEmailList] = useState([]);\n  const containerRefs = useRef([]);\n  const onSearchClick = async e => {\n    try {\n      setLoading(true);\n      setResults([]);\n      setInbox(0);\n      setSpam(0);\n      const res = await axios.post(\"http://localhost:5000/api/check\", {\n        search\n      });\n      if (res.data.status == 'OK') {\n        setResults(res.data.results);\n        setInbox(res.data.inbox);\n        setSpam(res.data.spam);\n      } else {\n        // Handle when no token is returned\n        alert(\"Invalid credentials or search result not found.\");\n      }\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        var _err$response;\n        console.error(\"Axios error:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        alert(\"A server error occurred. Please try again.\");\n      } else {\n        console.error(\"Unexpected error:\", err);\n        alert(\"An unknown error occurred.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchEmailList = async () => {\n    try {\n      // setLoading\n      const res = await api.get(\"http://localhost:5000/api/emails\", {});\n      if (res.data.status == 'OK') {\n        setEmailList(res.data.results);\n      } else {\n        alert(\"No emails found.\");\n      }\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        var _err$response2;\n        console.error(\"Axios error:\", ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n        alert(\"A server error occurred. Please try again.\");\n      } else {\n        console.error(\"Unexpected error:\", err);\n        alert(\"An unknown error occurred.\");\n      }\n    } finally {\n      // setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchEmailList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end w-full bg-[#174866] p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md bg-white rounded shadow overflow-hidden flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter name or email and press enter\",\n          value: search,\n          readOnly: loading,\n          onChange: e => setSearch(e.target.value),\n          className: \"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: loading,\n          onClick: onSearchClick,\n          className: \"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            className: \"text-white w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-6 justify-center my-8\",\n      children: [/*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"Inbox\",\n        value: inbox,\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"Spam\",\n        value: spam,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), emailList.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-500 mt-8\",\n      children: \"No emails found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), emailList.map((row, blockIndex) => {\n      let emailSection = emailSections.filter(item => item.email === row.email);\n      let emailInfo = emailSection.length > 0 ? emailSection[0].results : [];\n      let emailType = emailSection.length > 0 ? emailSection[0].type : \"_\";\n      // sort by date\n      emailInfo = [...emailInfo].sort((a, b) => {\n        const dateA = a.date ? new Date(a.date).getTime() : 0;\n        const dateB = b.date ? new Date(b.date).getTime() : 0;\n        return dateB - dateA;\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-6 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[300px] flex flex-col bg-gray-200 p-4 rounded-xl flex-shrink-0 items-center justify-center \",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/gmail.png\",\n            alt: \"icon\",\n            className: \"max-w-full max-h-40 object-contain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base mt-2 text-center\",\n            children: row.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `font-bold text-sm text-center ${emailType == 'valid' ? 'text-green-500' : 'text-red-500'}`,\n            children: emailType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Swiper, {\n            modules: [Navigation, Pagination],\n            spaceBetween: 20,\n            slidesPerView: 4,\n            navigation: true,\n            pagination: {\n              clickable: true\n            },\n            loop: false,\n            className: \"w-full\",\n            breakpoints: {\n              320: {\n                slidesPerView: 1\n              },\n              // Mobile\n              640: {\n                slidesPerView: 2\n              },\n              // Tablet\n              1024: {\n                slidesPerView: 4\n              } // Desktop\n            },\n            children: [emailInfo.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 border rounded-xl p-12 text-gray-500\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"p-1\",\n                children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 51\n                }, this) : \"No results found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), emailInfo.map((item, index) => {\n              const status = item.type || \"inbox\"; // Default to 'inbox' if type is not defined\n              const colorClass = statusColors[status] || \"bg-gray-100 text-gray-800\"; // Fallback color\n              return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `p-2 px-[10px] pb-[10px] border rounded-lg shadow ${colorClass}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"text-lg text-gray-900\",\n                    children: item.sender_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-700\",\n                    children: [\"---\", item.sender_email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"line-clamp-1 text-sm text-gray-700\",\n                    children: [\"Subject: \", item.subject]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"line-clamp-1 text-sm text-gray-700\",\n                    children: [\"Description: \", item.text]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: /*#__PURE__*/_jsxDEV(Badge, {\n                        text: item.type,\n                        color: item.type == 'inbox' ? 'green' : 'red'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 30\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-xs tracking-wide uppercase\",\n                      children: item.diff_time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, blockIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"Re3NSgf7b7m0ZM0EMGOEy9ynPfk=\");\n_c = DashboardPage;\nconst colorMap = {\n  red: {\n    border: \"border-red-500\",\n    text: \"text-red-700\"\n  },\n  green: {\n    border: \"border-green-500\",\n    text: \"text-green-700\"\n  },\n  blue: {\n    border: \"border-blue-500\",\n    text: \"text-blue-700\"\n  }\n};\nfunction StatCircle({\n  label,\n  value,\n  color\n}) {\n  const radius = 45;\n  const stroke = 10;\n  const normalizedRadius = radius - stroke / 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - value / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-24 h-24 flex items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"100%\",\n      width: \"100%\",\n      className: \"rotate-[-90deg]\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: \"#e5e7eb\" // gray-200\n        ,\n        fill: \"transparent\",\n        strokeWidth: stroke,\n        r: normalizedRadius,\n        cx: \"48\",\n        cy: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: color // Fallback if dynamic color fails\n        ,\n        className: `stroke-${color}-500` // Tailwind dynamic stroke\n        ,\n        fill: \"transparent\",\n        strokeWidth: stroke,\n        strokeDasharray: circumference,\n        strokeDashoffset: strokeDashoffset,\n        strokeLinecap: \"round\",\n        r: normalizedRadius,\n        cx: \"48\",\n        cy: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute text-center text-sm font-semibold text-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [value, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n_c2 = StatCircle;\nexport default DashboardPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"DashboardPage\");\n$RefreshReg$(_c2, \"StatCircle\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Search","axios","Badge","Spinner","Swiper","SwiperSlide","Navigation","Pagination","api","jsxDEV","_jsxDEV","statusColors","inbox","spam","DashboardPage","_s","loading","setLoading","search","setSearch","setInbox","setSpam","emailSections","setResults","emailList","setEmailList","containerRefs","onSearchClick","e","res","post","data","status","results","alert","err","isAxiosError","_err$response","console","error","response","message","fetchEmailList","get","_err$response2","className","children","type","placeholder","value","readOnly","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","StatCircle","label","color","length","map","row","blockIndex","emailSection","filter","item","email","emailInfo","emailType","sort","a","b","dateA","date","Date","getTime","dateB","src","alt","modules","spaceBetween","slidesPerView","navigation","pagination","clickable","loop","breakpoints","index","colorClass","sender_name","sender_email","subject","text","diff_time","_c","colorMap","red","border","green","blue","radius","stroke","normalizedRadius","circumference","Math","PI","strokeDashoffset","height","width","fill","strokeWidth","r","cx","cy","strokeDasharray","strokeLinecap","_c2","$RefreshReg$"],"sources":["D:/work/Email-Checker/frontend/src/pages/DashboardPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport { Search } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nimport Badge from './compontents/Badge'\r\nimport Spinner from './compontents/Spinner'\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Navigation, Pagination } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css/pagination\";\r\nimport api from \"./Api\";\r\n\r\nconst statusColors: Record<string, string> = {\r\n  inbox: \"bg-green-100 text-green-800\",\r\n  spam: \"bg-red-100 text-red-800\",\r\n};\r\n\r\ntype EmailResultItem = {\r\n  type?: string;\r\n  diff_time: string;\r\n  date?: Date;\r\n  text: string;\r\n  sender_name: string;\r\n  sender_email: string;\r\n  subject: string;\r\n};\r\n\r\ntype EmailSection = {\r\n  email: string;\r\n  results: EmailResultItem[];\r\n  inbox?: number;\r\n  spam?: number;\r\n  type?: string;\r\n};\r\n\r\ntype Email = {\r\n  id: number,\r\n  email: string;\r\n  name?: string;\r\n  status?: string;\r\n}\r\n\r\nconst DashboardPage = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [inbox, setInbox] = useState(0);\r\n  const [spam, setSpam] = useState(0);\r\n  const [emailSections, setResults] = useState<EmailSection[]>([]);\r\n  const [emailList, setEmailList] = useState<Email[]>([]);\r\n  const containerRefs = useRef<Array<HTMLDivElement | null>>([]);\r\n\r\n\r\n  const onSearchClick = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      setResults([]);\r\n      setInbox(0);\r\n      setSpam(0);\r\n\r\n      const res = await axios.post(\"http://localhost:5000/api/check\", {\r\n        search\r\n      });\r\n\r\n      if (res.data.status == 'OK') {\r\n        setResults(res.data.results);\r\n        setInbox(res.data.inbox);\r\n        setSpam(res.data.spam);\r\n      } else {\r\n        // Handle when no token is returned\r\n        alert(\"Invalid credentials or search result not found.\");\r\n      }\r\n\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        console.error(\"Axios error:\", err.response?.data || err.message);\r\n        alert(\"A server error occurred. Please try again.\");\r\n      } else {\r\n        console.error(\"Unexpected error:\", err);\r\n        alert(\"An unknown error occurred.\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchEmailList = async () => {\r\n    try {\r\n      // setLoading\r\n      const res = await api.get(\"http://localhost:5000/api/emails\", {});\r\n\r\n      if (res.data.status == 'OK') {\r\n        setEmailList(res.data.results);\r\n      } else {\r\n        alert(\"No emails found.\");\r\n      }\r\n\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        console.error(\"Axios error:\", err.response?.data || err.message);\r\n        alert(\"A server error occurred. Please try again.\");\r\n      } else {\r\n        console.error(\"Unexpected error:\", err);\r\n        alert(\"An unknown error occurred.\");\r\n      }\r\n    } finally {\r\n      // setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEmailList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-end w-full bg-[#174866] p-4\">\r\n\r\n\r\n        <div className=\"w-full max-w-md bg-white rounded shadow overflow-hidden flex\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter name or email and press enter\"\r\n            value={search}\r\n            readOnly={loading}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"\r\n          />\r\n          <button\r\n            disabled={loading}\r\n            onClick={onSearchClick}\r\n            className=\"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\"\r\n          >\r\n            <Search className=\"text-white w-4 h-4\" />\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats */}\r\n      <div className=\"flex flex-wrap gap-6 justify-center my-8\">\r\n        <StatCircle label=\"Inbox\" value={inbox} color=\"green\" />\r\n        <StatCircle label=\"Spam\" value={spam} color=\"red\" />\r\n      </div>\r\n      \r\n      {/* Email Sections */}\r\n      {emailList.length === 0 && (\r\n        <div className=\"text-center text-gray-500 mt-8\">\r\n          No emails found.\r\n        </div>\r\n      )}\r\n\r\n      {emailList.map((row: Email, blockIndex) => {\r\n        let emailSection = emailSections.filter((item) => item.email === row.email);\r\n        let emailInfo = emailSection.length > 0 ? emailSection[0].results : [];\r\n        let emailType = emailSection.length > 0 ? emailSection[0].type : \"_\";\r\n        // sort by date\r\n        emailInfo = [...emailInfo].sort((a, b) => {\r\n          const dateA = a.date ? new Date(a.date).getTime() : 0;\r\n          const dateB = b.date ? new Date(b.date).getTime() : 0;\r\n          return dateB - dateA;\r\n        })\r\n        \r\n        return (\r\n          <div key={blockIndex} className=\"flex items-center gap-6 p-4\">\r\n            {/* Left static card */}\r\n            <div className=\"w-[300px] flex flex-col bg-gray-200 p-4 rounded-xl flex-shrink-0 items-center justify-center \">\r\n              <img src=\"/gmail.png\" alt=\"icon\" className=\"max-w-full max-h-40 object-contain\" />\r\n              <p className=\"text-base mt-2 text-center\">{row.email}</p>\r\n              <p className={`font-bold text-sm text-center ${emailType == 'valid' ? 'text-green-500' : 'text-red-500'}`}>{emailType}</p>\r\n            </div>\r\n            \r\n            {/* Right scrollable section */}\r\n            <div className=\"flex-1 overflow-hidden\">\r\n              <Swiper\r\n                modules={[Navigation, Pagination]}\r\n                spaceBetween={20}\r\n                slidesPerView={4}\r\n                navigation\r\n                pagination={{ clickable: true }}\r\n                loop={false}\r\n                className=\"w-full\"\r\n                breakpoints={{\r\n                  320: { slidesPerView: 1 },  // Mobile\r\n                  640: { slidesPerView: 2 },  // Tablet\r\n                  1024: { slidesPerView: 4 }, // Desktop\r\n                }}\r\n              >\r\n                {emailInfo.length === 0 && (\r\n                  <div className=\"flex-1 border rounded-xl p-12 text-gray-500\">\r\n                    <p className=\"p-1\">{loading ? <Spinner /> : \"No results found.\"}</p>\r\n                  </div>\r\n                )}\r\n                {emailInfo.map((item: EmailResultItem, index: number) => {\r\n                  const status = item.type || \"inbox\"; // Default to 'inbox' if type is not defined\r\n                  const colorClass = statusColors[status] || \"bg-gray-100 text-gray-800\"; // Fallback color\r\n                  return (\r\n                    <SwiperSlide key={index}>\r\n                      <div className={`p-2 px-[10px] pb-[10px] border rounded-lg shadow ${colorClass}`}\r\n                      >\r\n                        <h1 className=\"text-lg text-gray-900\">{item.sender_name}</h1>\r\n                        <p className=\"text-sm text-gray-700\">---{item.sender_email}</p>\r\n                        <p className=\"line-clamp-1 text-sm text-gray-700\">Subject: {item.subject}</p>\r\n                        <p className=\"line-clamp-1 text-sm text-gray-700\">Description: {item.text}</p>\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <p><Badge text={item.type} color={item.type == 'inbox' ? 'green' : 'red'} /></p>\r\n                          <p className=\"text-xs tracking-wide uppercase\">{item.diff_time}</p>\r\n                        </div>\r\n                      </div>\r\n                    </SwiperSlide>\r\n                  );\r\n                })}\r\n              </Swiper>\r\n            </div>\r\n          </div>)\r\n      })}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\ntype Color = \"red\" | \"green\" | \"blue\";\r\n\r\ninterface StatCircleProps {\r\n  label: string;\r\n  value: number;\r\n  color: Color;\r\n}\r\n\r\nconst colorMap = {\r\n  red: {\r\n    border: \"border-red-500\",\r\n    text: \"text-red-700\",\r\n  },\r\n  green: {\r\n    border: \"border-green-500\",\r\n    text: \"text-green-700\",\r\n  },\r\n  blue: {\r\n    border: \"border-blue-500\",\r\n    text: \"text-blue-700\",\r\n  },\r\n};\r\n\r\nfunction StatCircle({ label, value, color }: StatCircleProps) {\r\n  const radius = 45;\r\n  const stroke = 10;\r\n  const normalizedRadius = radius - stroke / 2;\r\n  const circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset =\r\n    circumference - (value / 100) * circumference;\r\n\r\n  return (\r\n    <div className=\"relative w-24 h-24 flex items-center justify-center\">\r\n      <svg\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        className=\"rotate-[-90deg]\"\r\n      >\r\n        {/* Background circle */}\r\n        <circle\r\n          stroke=\"#e5e7eb\" // gray-200\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n        {/* Progress circle */}\r\n        <circle\r\n          stroke={color} // Fallback if dynamic color fails\r\n          className={`stroke-${color}-500`} // Tailwind dynamic stroke\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={strokeDashoffset}\r\n          strokeLinecap=\"round\"\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n      </svg>\r\n\r\n      {/* Center Text */}\r\n      <div className=\"absolute text-center text-sm font-semibold text-black\">\r\n        <p>{label}</p>\r\n        <p>{value}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}