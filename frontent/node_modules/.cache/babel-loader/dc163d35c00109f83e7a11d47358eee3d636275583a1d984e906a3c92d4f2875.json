{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{Search,LogOut}from\"lucide-react\";import axios from\"axios\";import Badge from'./compontents/Badge';import Spinner from'./compontents/Spinner';import{Swiper,SwiperSlide}from\"swiper/react\";import{Navigation,Pagination}from\"swiper/modules\";import\"swiper/css\";import\"swiper/css/navigation\";import\"swiper/css/pagination\";import api from\"./Api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const statusColors={inbox:\"bg-green-100 text-green-800\",spam:\"bg-red-100 text-red-800\"};const DashboardPage=_ref=>{let{onLogout}=_ref;const[loading,setLoading]=useState(false);const[search,setSearch]=useState(\"\");const[inbox,setInbox]=useState(0);const[spam,setSpam]=useState(0);const[percent_inbox,setPercentInbox]=useState(0);const[percent_spam,setPercentSpam]=useState(0);const[emailSections,setResults]=useState([]);const[emailList,setEmailList]=useState([]);const[emailLoading,setEmailLoading]=useState([]);const hasFetched=useRef(false);const handleKeyDown=e=>{if(e.key==='Enter'){onSearchClick(e);}};const onSearchClick=async e=>{if(!search.trim()){// <-- prevent empty or spaces\nalert(\"Input is required\");return;}try{setLoading(true);setEmailLoading([]);setResults([]);setInbox(0);setSpam(0);for(const item of emailList){let email=item.email;api.post(\"/api/check\",{search,email}).then(res=>{if(res.data.status==='OK'){setResults(prev=>[...prev,res.data.results]);setEmailLoading(prev=>[...prev,{email:email,loaded:true}]);setInbox(prev=>prev+Number(res.data.results.inbox));setSpam(prev=>prev+Number(res.data.results.spam));}else{alert(\"Invalid credentials or search result not found.\");}}).catch(error=>{console.error(\"API Error:\",error);alert(\"Request failed. Check console for details.\");});}}catch(err){if(axios.isAxiosError(err)){var _err$response;console.error(\"Axios error:\",((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data)||err.message);alert(\"A server error occurred. Please try again.\");}else{console.error(\"Unexpected error:\",err);alert(\"An unknown error occurred.\");}}};const fetchEmailList=async()=>{try{// setLoading\nconst res=await api.get(\"/api/emails\");if(res.data.status=='OK'){setEmailList(res.data.results);}else{alert(\"No emails found.\");}}catch(err){if(axios.isAxiosError(err)){var _err$response2;console.error(\"Axios error:\",((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.data)||err.message);alert(\"A server error occurred. Please try again.\");}else{console.error(\"Unexpected error:\",err);alert(\"An unknown error occurred.\");}}finally{// setLoading(false);\n}};const onSignout=()=>{api.post(\"/api/logout\").then(res=>{if(res.data.status===\"OK\"){localStorage.removeItem(\"token\");onLogout();}else{alert(\"Logout failed.\");}}).catch(err=>{console.error(\"Logout error:\",err);alert(\"A server error occurred. Please try again.\");});};useEffect(()=>{if(hasFetched.current)return;// Prevent re-run\nhasFetched.current=true;fetchEmailList();},[]);useEffect(()=>{let all_box=inbox+spam;let p_inbox=all_box>0?Number((inbox/all_box*100).toFixed(2)):0;let p_spam=all_box>0?Number((spam/all_box*100).toFixed(2)):0;setPercentInbox(p_inbox);setPercentSpam(p_spam);},[inbox,spam]);useEffect(()=>{if(emailLoading.length===emailList.length){// All emails have been processed\nsetLoading(false);}},[emailLoading,emailList.length]);return/*#__PURE__*/_jsxs(\"div\",{className:\"\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end w-full bg-[#174866] p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-md bg-white rounded shadow overflow-hidden flex\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter name or email and press enter\",value:search,readOnly:loading,required:true,onKeyDown:e=>handleKeyDown(e),onChange:e=>setSearch(e.target.value),className:\"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"}),/*#__PURE__*/_jsx(\"button\",{disabled:loading,onClick:onSearchClick,className:\"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\",children:/*#__PURE__*/_jsx(Search,{className:\"text-white w-4 h-4\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex mx-4\",children:/*#__PURE__*/_jsx(\"button\",{onClick:onSignout,className:\"bg-red-100 w-10 h-10 p-3 rounded-full border-none hover:opacity-80\",title:\"Logout\",children:/*#__PURE__*/_jsx(LogOut,{className:\"text-gray-700 w-4 h-4\"})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-6 justify-center my-8\",children:[/*#__PURE__*/_jsx(StatCircle,{label:\"Inbox\",value:percent_inbox,color:\"green\"}),/*#__PURE__*/_jsx(StatCircle,{label:\"Spam\",value:percent_spam,color:\"red\"})]}),emailList.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-gray-500 mt-8\",children:\"No emails found.\"}),emailList.map((row,blockIndex)=>{var _emailLoading$find;let emailSection=emailSections.filter(item=>item.email===row.email);let emailInfo=emailSection.length>0?emailSection[0].results:[];let emailType=emailSection.length>0?emailSection[0].type:\"_\";let emailLoaded=((_emailLoading$find=emailLoading.find(item=>item.email===row.email))===null||_emailLoading$find===void 0?void 0:_emailLoading$find.loaded)||false;// sort by date\nemailInfo=[...emailInfo].sort((a,b)=>{const dateA=a.date?new Date(a.date).getTime():0;const dateB=b.date?new Date(b.date).getTime():0;return dateB-dateA;});return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-6 p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-[300px] flex flex-col bg-gray-200 p-4 rounded-xl flex-shrink-0 items-center justify-center \",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/gmail.png\",alt:\"icon\",className:\"max-w-full max-h-40 object-contain\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-base mt-2 text-center\",children:row.email}),/*#__PURE__*/_jsx(\"p\",{className:`font-bold text-sm text-center ${emailType=='valid'?'text-green-500':'text-red-500'}`,children:emailType})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-hidden\",children:/*#__PURE__*/_jsxs(Swiper,{modules:[Navigation,Pagination],spaceBetween:20,slidesPerView:4,navigation:true,pagination:{clickable:true},loop:false,className:\"w-full\",breakpoints:{320:{slidesPerView:1},// Mobile\n640:{slidesPerView:2},// Tablet\n1024:{slidesPerView:4}// Desktop\n},children:[emailInfo.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 border rounded-xl p-12 text-gray-500\",children:loading&&!emailLoaded?/*#__PURE__*/_jsx(Spinner,{}):\"No recent emails found from this sender or email.\"}),emailInfo.map((item,index)=>{const status=item.type||\"inbox\";// Default to 'inbox' if type is not defined\nconst colorClass=statusColors[status]||\"bg-gray-100 text-gray-800\";// Fallback color\nreturn/*#__PURE__*/_jsx(SwiperSlide,{children:/*#__PURE__*/_jsxs(\"div\",{className:`p-2 px-[10px] pb-[10px] border rounded-lg shadow ${colorClass}`,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-lg text-gray-900\",children:item.sender_name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-700\",children:[\"---\",item.sender_email]}),/*#__PURE__*/_jsxs(\"p\",{className:\"line-clamp-1 text-sm text-gray-700\",children:[\"Subject: \",item.subject]}),/*#__PURE__*/_jsxs(\"p\",{className:\"line-clamp-1 text-sm text-gray-700\",children:[\"Description: \",item.text]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(Badge,{text:item.type,color:item.type=='inbox'?'green':'red'})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs tracking-wide uppercase\",children:item.diff_time})]})]})},index);})]})})]},blockIndex);})]});};function StatCircle(_ref2){let{label,value,color}=_ref2;const radius=45;const stroke=10;const normalizedRadius=radius-stroke/2;const circumference=normalizedRadius*2*Math.PI;const strokeDashoffset=circumference-value/100*circumference;return/*#__PURE__*/_jsxs(\"div\",{className:\"relative w-24 h-24 flex items-center justify-center\",children:[/*#__PURE__*/_jsxs(\"svg\",{height:\"100%\",width:\"100%\",className:\"rotate-[-90deg]\",children:[/*#__PURE__*/_jsx(\"circle\",{stroke:\"#e5e7eb\"// gray-200\n,fill:\"transparent\",strokeWidth:stroke,r:normalizedRadius,cx:\"48\",cy:\"48\"}),/*#__PURE__*/_jsx(\"circle\",{stroke:color// Fallback if dynamic color fails\n,className:`stroke-${color}-500`// Tailwind dynamic stroke\n,fill:\"transparent\",strokeWidth:stroke,strokeDasharray:circumference,strokeDashoffset:strokeDashoffset,strokeLinecap:\"round\",r:normalizedRadius,cx:\"48\",cy:\"48\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute text-center text-sm font-semibold text-black\",children:[/*#__PURE__*/_jsx(\"p\",{children:label}),/*#__PURE__*/_jsxs(\"p\",{children:[value,\"%\"]})]})]});}export default DashboardPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","Search","LogOut","axios","Badge","Spinner","Swiper","SwiperSlide","Navigation","Pagination","api","jsx","_jsx","jsxs","_jsxs","statusColors","inbox","spam","DashboardPage","_ref","onLogout","loading","setLoading","search","setSearch","setInbox","setSpam","percent_inbox","setPercentInbox","percent_spam","setPercentSpam","emailSections","setResults","emailList","setEmailList","emailLoading","setEmailLoading","hasFetched","handleKeyDown","e","key","onSearchClick","trim","alert","item","email","post","then","res","data","status","prev","results","loaded","Number","catch","error","console","err","isAxiosError","_err$response","response","message","fetchEmailList","get","_err$response2","onSignout","localStorage","removeItem","current","all_box","p_inbox","toFixed","p_spam","length","className","children","type","placeholder","value","readOnly","required","onKeyDown","onChange","target","disabled","onClick","title","StatCircle","label","color","map","row","blockIndex","_emailLoading$find","emailSection","filter","emailInfo","emailType","emailLoaded","find","sort","a","b","dateA","date","Date","getTime","dateB","src","alt","modules","spaceBetween","slidesPerView","navigation","pagination","clickable","loop","breakpoints","index","colorClass","sender_name","sender_email","subject","text","diff_time","_ref2","radius","stroke","normalizedRadius","circumference","Math","PI","strokeDashoffset","height","width","fill","strokeWidth","r","cx","cy","strokeDasharray","strokeLinecap"],"sources":["D:/work/Email-Checker-New/frontend/src/pages/DashboardPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport { Search, LogOut } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nimport Badge from './compontents/Badge'\r\nimport Spinner from './compontents/Spinner'\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Navigation, Pagination } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css/pagination\";\r\nimport api from \"./Api\";\r\nimport EmailList from \"./EmailList\";\r\n\r\n\r\n\r\n\r\n\r\nconst statusColors: Record<string, string> = {\r\n  inbox: \"bg-green-100 text-green-800\",\r\n  spam: \"bg-red-100 text-red-800\",\r\n};\r\n\r\ntype EmailResultItem = {\r\n  type?: string;\r\n  diff_time: string;\r\n  date?: Date;\r\n  text: string;\r\n  sender_name: string;\r\n  sender_email: string;\r\n  subject: string;\r\n};\r\n\r\ntype EmailSection = {\r\n  email: string;\r\n  results: EmailResultItem[];\r\n  inbox?: number;\r\n  spam?: number;\r\n  type?: string;\r\n};\r\n\r\ntype Email = {\r\n  id: number,\r\n  email: string;\r\n  name?: string;\r\n  status?: string;\r\n}\r\n\r\ntype EmailLoading = {\r\n  email: string;\r\n  loaded: boolean;\r\n}\r\n\r\ninterface DashboardsProps {\r\n  onLogout: () => void;\r\n}\r\n\r\nconst DashboardPage = ({ onLogout }: DashboardsProps) => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [inbox, setInbox] = useState<number>(0);\r\n  const [spam, setSpam] = useState<number>(0);\r\n\r\n  const [percent_inbox, setPercentInbox] = useState<number>(0);\r\n  const [percent_spam, setPercentSpam] = useState<number>(0);\r\n  const [emailSections, setResults] = useState<EmailSection[]>([]);\r\n  const [emailList, setEmailList] = useState<Email[]>([]);\r\n  const [emailLoading, setEmailLoading] = useState<EmailLoading[]>([]);\r\n  const hasFetched = useRef(false);\r\n\r\n  interface HandleKeyDownEvent extends React.KeyboardEvent<HTMLInputElement> {}\r\n\r\n  const handleKeyDown = (e: HandleKeyDownEvent) => {\r\n    if (e.key === 'Enter') {\r\n      onSearchClick(e as unknown as React.MouseEvent<HTMLButtonElement>);\r\n    }\r\n  };\r\n\r\n  const onSearchClick = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    \r\n    if (!search.trim()) {            // <-- prevent empty or spaces\r\n      alert(\"Input is required\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setEmailLoading([]);\r\n      setResults([]);\r\n      setInbox(0);\r\n      setSpam(0);\r\n\r\n      for (const item of emailList) {\r\n        let email = item.email;\r\n        api.post(\"/api/check\", { search, email })\r\n          .then((res) => {\r\n            if (res.data.status === 'OK') {\r\n\r\n              setResults(prev => [...prev, res.data.results]);\r\n              setEmailLoading(prev => [...prev, { email: email, loaded: true }]);\r\n              setInbox(prev => prev + Number(res.data.results.inbox));\r\n              setSpam(prev => prev + Number(res.data.results.spam));\r\n\r\n            } else {\r\n              alert(\"Invalid credentials or search result not found.\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"API Error:\", error);\r\n            alert(\"Request failed. Check console for details.\");\r\n          });\r\n      }\r\n\r\n\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        console.error(\"Axios error:\", err.response?.data || err.message);\r\n        alert(\"A server error occurred. Please try again.\");\r\n      } else {\r\n        console.error(\"Unexpected error:\", err);\r\n        alert(\"An unknown error occurred.\");\r\n      }\r\n    } \r\n  };\r\n\r\n  const fetchEmailList = async () => {\r\n    try {\r\n      // setLoading\r\n      const res = await api.get(\"/api/emails\");\r\n\r\n      if (res.data.status == 'OK') {\r\n        setEmailList(res.data.results);\r\n      } else {\r\n        alert(\"No emails found.\");\r\n      }\r\n\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        console.error(\"Axios error:\", err.response?.data || err.message);\r\n        alert(\"A server error occurred. Please try again.\");\r\n      } else {\r\n        console.error(\"Unexpected error:\", err);\r\n        alert(\"An unknown error occurred.\");\r\n      }\r\n    } finally {\r\n      // setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onSignout = () => {\r\n    api.post(\"/api/logout\")\r\n      .then((res) => {\r\n        if (res.data.status === \"OK\") {\r\n          localStorage.removeItem(\"token\");\r\n          onLogout();\r\n        } else {\r\n          alert(\"Logout failed.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Logout error:\", err);\r\n        alert(\"A server error occurred. Please try again.\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (hasFetched.current) return; // Prevent re-run\r\n    hasFetched.current = true;\r\n    fetchEmailList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let all_box = inbox + spam;\r\n    let p_inbox = all_box > 0 ? Number(((inbox / all_box) * 100).toFixed(2)) : 0;\r\n    let p_spam = all_box > 0 ? Number(((spam / all_box) * 100).toFixed(2)) : 0;\r\n    setPercentInbox(p_inbox);\r\n    setPercentSpam(p_spam);\r\n  }, [inbox,spam]);\r\n\r\n  useEffect(() => {\r\n    if(emailLoading.length === emailList.length) {\r\n      // All emails have been processed\r\n      setLoading(false);\r\n    }\r\n  }, [emailLoading, emailList.length]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-end w-full bg-[#174866] p-4\">\r\n\r\n\r\n        <div className=\"w-full max-w-md bg-white rounded shadow overflow-hidden flex\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter name or email and press enter\"\r\n            value={search}\r\n            readOnly={loading}\r\n            required\r\n            onKeyDown={(e) => handleKeyDown(e)}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"\r\n          />\r\n          <button\r\n            disabled={loading}\r\n            onClick={onSearchClick}\r\n            className=\"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\"\r\n          >\r\n            <Search className=\"text-white w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"flex mx-4\">\r\n          <button\r\n            onClick={onSignout}\r\n            className=\"bg-red-100 w-10 h-10 p-3 rounded-full border-none hover:opacity-80\"\r\n            title=\"Logout\"\r\n          >\r\n            <LogOut className=\"text-gray-700 w-4 h-4\" />\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats */}\r\n      <div className=\"flex flex-wrap gap-6 justify-center my-8\">\r\n        <StatCircle label=\"Inbox\" value={percent_inbox} color=\"green\" />\r\n        <StatCircle label=\"Spam\" value={percent_spam} color=\"red\" />\r\n      </div>\r\n\r\n      {/* Email Sections */}\r\n      {emailList.length === 0 && (\r\n        <div className=\"text-center text-gray-500 mt-8\">\r\n          No emails found.\r\n        </div>\r\n      )}\r\n\r\n      {emailList.map((row: Email, blockIndex) => {\r\n        let emailSection = emailSections.filter((item) => item.email === row.email);\r\n        let emailInfo = emailSection.length > 0 ? emailSection[0].results : [];\r\n        let emailType = emailSection.length > 0 ? emailSection[0].type : \"_\";\r\n        let emailLoaded = emailLoading.find((item) => item.email === row.email)?.loaded || false;\r\n\r\n        // sort by date\r\n        emailInfo = [...emailInfo].sort((a, b) => {\r\n          const dateA = a.date ? new Date(a.date).getTime() : 0;\r\n          const dateB = b.date ? new Date(b.date).getTime() : 0;\r\n          return dateB - dateA;\r\n        })\r\n\r\n        return (\r\n          <div key={blockIndex} className=\"flex items-center gap-6 p-4\">\r\n            {/* Left static card */}\r\n            <div className=\"w-[300px] flex flex-col bg-gray-200 p-4 rounded-xl flex-shrink-0 items-center justify-center \">\r\n              <img src=\"/gmail.png\" alt=\"icon\" className=\"max-w-full max-h-40 object-contain\" />\r\n              <p className=\"text-base mt-2 text-center\">{row.email}</p>\r\n              <p className={`font-bold text-sm text-center ${emailType == 'valid' ? 'text-green-500' : 'text-red-500'}`}>{emailType}</p>\r\n            </div>\r\n\r\n            {/* Right scrollable section */}\r\n            <div className=\"flex-1 overflow-hidden\">\r\n              <Swiper\r\n                modules={[Navigation, Pagination]}\r\n                spaceBetween={20}\r\n                slidesPerView={4}\r\n                navigation\r\n                pagination={{ clickable: true }}\r\n                loop={false}\r\n                className=\"w-full\"\r\n                breakpoints={{\r\n                  320: { slidesPerView: 1 },  // Mobile\r\n                  640: { slidesPerView: 2 },  // Tablet\r\n                  1024: { slidesPerView: 4 }, // Desktop\r\n                }}\r\n              >\r\n                {emailInfo.length === 0 && (\r\n                  <div className=\"flex-1 border rounded-xl p-12 text-gray-500\">\r\n                    {loading && !emailLoaded ? <Spinner /> : \"No recent emails found from this sender or email.\"}\r\n                  </div>\r\n                )}\r\n                {emailInfo.map((item: EmailResultItem, index: number) => {\r\n                  const status = item.type || \"inbox\"; // Default to 'inbox' if type is not defined\r\n                  const colorClass = statusColors[status] || \"bg-gray-100 text-gray-800\"; // Fallback color\r\n                  return (\r\n                    <SwiperSlide key={index}>\r\n                      <div className={`p-2 px-[10px] pb-[10px] border rounded-lg shadow ${colorClass}`}\r\n                      >\r\n                        <h1 className=\"text-lg text-gray-900\">{item.sender_name}</h1>\r\n                        <p className=\"text-sm text-gray-700\">---{item.sender_email}</p>\r\n                        <p className=\"line-clamp-1 text-sm text-gray-700\">Subject: {item.subject}</p>\r\n                        <p className=\"line-clamp-1 text-sm text-gray-700\">Description: {item.text}</p>\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <p><Badge text={item.type} color={item.type == 'inbox' ? 'green' : 'red'} /></p>\r\n                          <p className=\"text-xs tracking-wide uppercase\">{item.diff_time}</p>\r\n                        </div>\r\n                      </div>\r\n                    </SwiperSlide>\r\n                  );\r\n                })}\r\n              </Swiper>\r\n            </div>\r\n          </div>)\r\n      })}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\ntype Color = \"red\" | \"green\" | \"blue\";\r\n\r\ninterface StatCircleProps {\r\n  label: string;\r\n  value: number;\r\n  color: Color;\r\n}\r\n\r\n\r\nfunction StatCircle({ label, value, color }: StatCircleProps) {\r\n  const radius = 45;\r\n  const stroke = 10;\r\n  const normalizedRadius = radius - stroke / 2;\r\n  const circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset =\r\n    circumference - (value / 100) * circumference;\r\n\r\n  return (\r\n    <div className=\"relative w-24 h-24 flex items-center justify-center\">\r\n      <svg\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        className=\"rotate-[-90deg]\"\r\n      >\r\n        {/* Background circle */}\r\n        <circle\r\n          stroke=\"#e5e7eb\" // gray-200\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n        {/* Progress circle */}\r\n        <circle\r\n          stroke={color} // Fallback if dynamic color fails\r\n          className={`stroke-${color}-500`} // Tailwind dynamic stroke\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={strokeDashoffset}\r\n          strokeLinecap=\"round\"\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n      </svg>\r\n\r\n      {/* Center Text */}\r\n      <div className=\"absolute text-center text-sm font-semibold text-black\">\r\n        <p>{label}</p>\r\n        <p>{value}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}