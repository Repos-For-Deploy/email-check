{"ast":null,"code":"var _jsxFileName = \"D:\\\\work\\\\Email-Checker\\\\frontend\\\\src\\\\pages\\\\DashboardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Search } from \"lucide-react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColors = {\n  inbox: \"bg-green-100 text-green-800\",\n  spam: \"bg-red-100 text-red-800\"\n};\nconst DashboardPage = () => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [inbox, setInbox] = useState(0);\n  const [spam, setSpam] = useState(0);\n  const [nofind, setNofind] = useState(0);\n  const [emailSections, setResults] = useState([]);\n  const containerRefs = useRef([]);\n  const percentage = 75;\n  const radius = 50;\n  const stroke = 10;\n  const normalizedRadius = radius - stroke / 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - percentage / 100 * circumference;\n  const onSearchClick = async e => {\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/check\", {\n        search\n      });\n      console.log(res.data.results);\n      if (res.data.status == 'OK') {\n        setResults(res.data.results);\n        setInbox(res.data.inbox);\n        setSpam(res.data.spam);\n        setNofind(res.data.not_find);\n      } else {\n        // Handle when no token is returned\n        alert(\"Invalid credentials or search result not found.\");\n      }\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        var _err$response;\n        console.error(\"Axios error:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        alert(\"A server error occurred. Please try again.\");\n      } else {\n        console.error(\"Unexpected error:\", err);\n        alert(\"An unknown error occurred.\");\n      }\n    }\n  };\n\n  // useEffect(() => {\n  //   setSearch(\"gistangjie@outlook.com\");\n  // }, []);\n\n  const scroll = (index, direction) => {\n    const container = containerRefs.current[index];\n    if (container) {\n      const scrollAmount = 300;\n      container.scrollBy({\n        left: direction === \"left\" ? -scrollAmount : scrollAmount,\n        behavior: \"smooth\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end w-full bg-[#174866] p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md bg-white rounded shadow overflow-hidden flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter keyword or email and press enter\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          className: \"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSearchClick,\n          className: \"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            className: \"text-white w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-6 justify-center my-8\",\n      children: [/*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"Inbox\",\n        value: inbox,\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"Spam\",\n        value: spam,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCircle, {\n        label: \"NotFound\",\n        value: nofind,\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), emailSections.map((row, blockIndex) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-item flex flex-col lg:flex-row gap-4 items-start mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full sm:w-[250px] h-[130px] p-2 px-[10px] pb-[10px] border rounded-lg shadow flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/gmail.png\",\n            alt: \"icon\",\n            className: \"w-[60px] mt-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base mt-2 text-center\",\n            children: row.account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-center text-green-700 font-bold\",\n            children: \"valid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-x-auto flex gap-4 p-2 border rounded-lg shadow\",\n          children: row.results.map((item, index) => {\n            const status = item.inbox ? \"inbox\" : item.spam ? \"spam\" : \"not_found\";\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-[300px] h-[130px] p-2 px-[10px] pb-[10px] border rounded-lg shadow flex flex-col items-start ${statusColors[status]}`,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-700\",\n                children: item.diff_time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-base mt-2\",\n                children: item.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, blockIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"RIqGi6zdxd1vyqHixyrPaF7PFto=\");\n_c = DashboardPage;\nconst colorMap = {\n  red: {\n    border: \"border-red-500\",\n    text: \"text-red-700\"\n  },\n  green: {\n    border: \"border-green-500\",\n    text: \"text-green-700\"\n  },\n  blue: {\n    border: \"border-blue-500\",\n    text: \"text-blue-700\"\n  }\n};\nfunction StatCircle({\n  label,\n  value,\n  color\n}) {\n  const radius = 45;\n  const stroke = 10;\n  const normalizedRadius = radius - stroke / 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - value / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-24 h-24 flex items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"100%\",\n      width: \"100%\",\n      className: \"rotate-[-90deg]\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: \"#e5e7eb\" // gray-200\n        ,\n        fill: \"transparent\",\n        strokeWidth: stroke,\n        r: normalizedRadius,\n        cx: \"48\",\n        cy: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: color // Fallback if dynamic color fails\n        ,\n        className: `stroke-${color}-500` // Tailwind dynamic stroke\n        ,\n        fill: \"transparent\",\n        strokeWidth: stroke,\n        strokeDasharray: circumference,\n        strokeDashoffset: strokeDashoffset,\n        strokeLinecap: \"round\",\n        r: normalizedRadius,\n        cx: \"48\",\n        cy: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute text-center text-sm font-semibold text-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [value, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n_c2 = StatCircle;\nexport default DashboardPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"DashboardPage\");\n$RefreshReg$(_c2, \"StatCircle\");","map":{"version":3,"names":["React","useState","useRef","Search","axios","jsxDEV","_jsxDEV","statusColors","inbox","spam","DashboardPage","_s","search","setSearch","setInbox","setSpam","nofind","setNofind","emailSections","setResults","containerRefs","percentage","radius","stroke","normalizedRadius","circumference","Math","PI","strokeDashoffset","onSearchClick","e","res","post","console","log","data","results","status","not_find","alert","err","isAxiosError","_err$response","error","response","message","scroll","index","direction","container","current","scrollAmount","scrollBy","left","behavior","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","StatCircle","label","color","map","row","blockIndex","src","alt","account","item","diff_time","text","_c","colorMap","red","border","green","blue","height","width","fill","strokeWidth","r","cx","cy","strokeDasharray","strokeLinecap","_c2","$RefreshReg$"],"sources":["D:/work/Email-Checker/frontend/src/pages/DashboardPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport { Search } from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nconst statusColors: Record<string, string> = {\r\n  inbox: \"bg-green-100 text-green-800\",\r\n  spam: \"bg-red-100 text-red-800\",\r\n};\r\n\r\ntype EmailResultItem = {\r\n  inbox?: boolean;\r\n  spam?: boolean;\r\n  not_found?: boolean;\r\n  diff_time: string;\r\n  text: string;\r\n};\r\n\r\ntype EmailSection = {\r\n  account: string;\r\n  results: EmailResultItem[];\r\n  inbox?: number;\r\n  spam?: number;\r\n  not_found?: number;\r\n};\r\n\r\nconst DashboardPage = () => {\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [inbox, setInbox] = useState(0);\r\n  const [spam, setSpam] = useState(0);\r\n  const [nofind, setNofind] = useState(0);\r\n  const [emailSections, setResults] = useState<EmailSection[]>([]);\r\n  const containerRefs = useRef<Array<HTMLDivElement | null>>([]);\r\n\r\n  const percentage = 75;\r\n\r\n  const radius = 50;\r\n  const stroke = 10;\r\n  const normalizedRadius = radius - stroke / 2;\r\n  const circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset = circumference - (percentage / 100) * circumference;\r\n\r\n  const onSearchClick = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/check\", {\r\n        search\r\n      });\r\n      console.log(res.data.results)\r\n      if (res.data.status == 'OK') {\r\n        setResults(res.data.results);\r\n        setInbox(res.data.inbox);\r\n        setSpam(res.data.spam);\r\n        setNofind(res.data.not_find);\r\n      } else {\r\n        // Handle when no token is returned\r\n        alert(\"Invalid credentials or search result not found.\");\r\n      }\r\n\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        console.error(\"Axios error:\", err.response?.data || err.message);\r\n        alert(\"A server error occurred. Please try again.\");\r\n      } else {\r\n        console.error(\"Unexpected error:\", err);\r\n        alert(\"An unknown error occurred.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setSearch(\"gistangjie@outlook.com\");\r\n  // }, []);\r\n\r\n  const scroll = (index: number, direction: \"left\" | \"right\") => {\r\n    const container = containerRefs.current[index];\r\n    if (container) {\r\n      const scrollAmount = 300;\r\n      container.scrollBy({\r\n        left: direction === \"left\" ? -scrollAmount : scrollAmount,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-4\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-end w-full bg-[#174866] p-4\">\r\n        <div className=\"w-full max-w-md bg-white rounded shadow overflow-hidden flex\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter keyword or email and press enter\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n\r\n            className=\"flex-1 px-4 py-2 text-sm text-gray-700 focus:outline-none\"\r\n          />\r\n          <button\r\n            onClick={onSearchClick}\r\n            className=\"bg-green-500 hover:bg-green-600 px-4 flex items-center justify-center\"\r\n          >\r\n            <Search className=\"text-white w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats */}\r\n      <div className=\"flex flex-wrap gap-6 justify-center my-8\">\r\n        <StatCircle label=\"Inbox\" value={inbox} color=\"green\" />\r\n        <StatCircle label=\"Spam\" value={spam} color=\"red\" />\r\n        <StatCircle label=\"NotFound\" value={nofind} color=\"blue\" />\r\n      </div>\r\n      {/* Email Sections */}\r\n      \r\n      {emailSections.map((row:EmailSection, blockIndex) => {\r\n        return (<div key={blockIndex} className=\"message-item flex flex-col lg:flex-row gap-4 items-start mb-6\">\r\n          {/* Left static card */}\r\n          <div className=\"w-full sm:w-[250px] h-[130px] p-2 px-[10px] pb-[10px] border rounded-lg shadow flex flex-col items-center\">\r\n            <img src=\"/gmail.png\" alt=\"icon\" className=\"w-[60px] mt-3\" />\r\n            <p className=\"text-base mt-2 text-center\">{row.account}</p>\r\n            <p className=\"text-sm text-center text-green-700 font-bold\">valid</p>\r\n          </div>\r\n\r\n          {/* Right scrollable section */}\r\n          <div className=\"flex-1 overflow-x-auto flex gap-4 p-2 border rounded-lg shadow\" >\r\n            {row.results.map((item: EmailResultItem, index: number) => {\r\n              const status = item.inbox ? \"inbox\" : item.spam ? \"spam\" : \"not_found\";\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`w-[300px] h-[130px] p-2 px-[10px] pb-[10px] border rounded-lg shadow flex flex-col items-start ${statusColors[status]}`}\r\n                >\r\n                  <p className=\"text-sm text-gray-700\">{item.diff_time}</p>\r\n                  <p className=\"text-base mt-2\">{item.text}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>)\r\n      })}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\ntype Color = \"red\" | \"green\" | \"blue\";\r\n\r\ninterface StatCircleProps {\r\n  label: string;\r\n  value: number;\r\n  color: Color;\r\n}\r\n\r\nconst colorMap = {\r\n  red: {\r\n    border: \"border-red-500\",\r\n    text: \"text-red-700\",\r\n  },\r\n  green: {\r\n    border: \"border-green-500\",\r\n    text: \"text-green-700\",\r\n  },\r\n  blue: {\r\n    border: \"border-blue-500\",\r\n    text: \"text-blue-700\",\r\n  },\r\n};\r\n\r\nfunction StatCircle({ label, value, color }: StatCircleProps) {\r\n  const radius = 45;\r\n  const stroke = 10;\r\n  const normalizedRadius = radius - stroke / 2;\r\n  const circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset =\r\n    circumference - (value / 100) * circumference;\r\n\r\n  return (\r\n    <div className=\"relative w-24 h-24 flex items-center justify-center\">\r\n      <svg\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        className=\"rotate-[-90deg]\"\r\n      >\r\n        {/* Background circle */}\r\n        <circle\r\n          stroke=\"#e5e7eb\" // gray-200\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n        {/* Progress circle */}\r\n        <circle\r\n          stroke={color} // Fallback if dynamic color fails\r\n          className={`stroke-${color}-500`} // Tailwind dynamic stroke\r\n          fill=\"transparent\"\r\n          strokeWidth={stroke}\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={strokeDashoffset}\r\n          strokeLinecap=\"round\"\r\n          r={normalizedRadius}\r\n          cx=\"48\"\r\n          cy=\"48\"\r\n        />\r\n      </svg>\r\n\r\n      {/* Center Text */}\r\n      <div className=\"absolute text-center text-sm font-semibold text-black\">\r\n        <p>{label}</p>\r\n        <p>{value}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAaC,MAAM,QAAQ,OAAO;AAE1D,SAASC,MAAM,QAAQ,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK1B,MAAMC,YAAoC,GAAG;EAC3CC,KAAK,EAAE,6BAA6B;EACpCC,IAAI,EAAE;AACR,CAAC;AAkBD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEM,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,IAAI,EAAEM,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACiB,aAAa,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAiB,EAAE,CAAC;EAChE,MAAMmB,aAAa,GAAGlB,MAAM,CAA+B,EAAE,CAAC;EAE9D,MAAMmB,UAAU,GAAG,EAAE;EAErB,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,gBAAgB,GAAGF,MAAM,GAAGC,MAAM,GAAG,CAAC;EAC5C,MAAME,aAAa,GAAGD,gBAAgB,GAAG,CAAC,GAAGE,IAAI,CAACC,EAAE;EACpD,MAAMC,gBAAgB,GAAGH,aAAa,GAAIJ,UAAU,GAAG,GAAG,GAAII,aAAa;EAE3E,MAAMI,aAAa,GAAG,MAAOC,CAAsC,IAAK;IACtE,IAAI;MACF,MAAMC,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,IAAI,CAAC,iCAAiC,EAAE;QAC9DpB;MACF,CAAC,CAAC;MACFqB,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAACC,OAAO,CAAC;MAC7B,IAAIL,GAAG,CAACI,IAAI,CAACE,MAAM,IAAI,IAAI,EAAE;QAC3BlB,UAAU,CAACY,GAAG,CAACI,IAAI,CAACC,OAAO,CAAC;QAC5BtB,QAAQ,CAACiB,GAAG,CAACI,IAAI,CAAC3B,KAAK,CAAC;QACxBO,OAAO,CAACgB,GAAG,CAACI,IAAI,CAAC1B,IAAI,CAAC;QACtBQ,SAAS,CAACc,GAAG,CAACI,IAAI,CAACG,QAAQ,CAAC;MAC9B,CAAC,MAAM;QACL;QACAC,KAAK,CAAC,iDAAiD,CAAC;MAC1D;IAEF,CAAC,CAAC,OAAOC,GAAY,EAAE;MACrB,IAAIpC,KAAK,CAACqC,YAAY,CAACD,GAAG,CAAC,EAAE;QAAA,IAAAE,aAAA;QAC3BT,OAAO,CAACU,KAAK,CAAC,cAAc,EAAE,EAAAD,aAAA,GAAAF,GAAG,CAACI,QAAQ,cAAAF,aAAA,uBAAZA,aAAA,CAAcP,IAAI,KAAIK,GAAG,CAACK,OAAO,CAAC;QAChEN,KAAK,CAAC,4CAA4C,CAAC;MACrD,CAAC,MAAM;QACLN,OAAO,CAACU,KAAK,CAAC,mBAAmB,EAAEH,GAAG,CAAC;QACvCD,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF;EACF,CAAC;;EAED;EACA;EACA;;EAEA,MAAMO,MAAM,GAAGA,CAACC,KAAa,EAAEC,SAA2B,KAAK;IAC7D,MAAMC,SAAS,GAAG7B,aAAa,CAAC8B,OAAO,CAACH,KAAK,CAAC;IAC9C,IAAIE,SAAS,EAAE;MACb,MAAME,YAAY,GAAG,GAAG;MACxBF,SAAS,CAACG,QAAQ,CAAC;QACjBC,IAAI,EAAEL,SAAS,KAAK,MAAM,GAAG,CAACG,YAAY,GAAGA,YAAY;QACzDG,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEhD,OAAA;IAAKiD,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAE1ClD,OAAA;MAAKiD,SAAS,EAAC,0CAA0C;MAAAC,QAAA,eACvDlD,OAAA;QAAKiD,SAAS,EAAC,8DAA8D;QAAAC,QAAA,gBAC3ElD,OAAA;UACEmD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,wCAAwC;UACpDC,KAAK,EAAE/C,MAAO;UACdgD,QAAQ,EAAG9B,CAAC,IAAKjB,SAAS,CAACiB,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;UAE3CJ,SAAS,EAAC;QAA2D;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtE,CAAC,eACF3D,OAAA;UACE4D,OAAO,EAAErC,aAAc;UACvB0B,SAAS,EAAC,uEAAuE;UAAAC,QAAA,eAEjFlD,OAAA,CAACH,MAAM;YAACoD,SAAS,EAAC;UAAoB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN3D,OAAA;MAAKiD,SAAS,EAAC,0CAA0C;MAAAC,QAAA,gBACvDlD,OAAA,CAAC6D,UAAU;QAACC,KAAK,EAAC,OAAO;QAACT,KAAK,EAAEnD,KAAM;QAAC6D,KAAK,EAAC;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxD3D,OAAA,CAAC6D,UAAU;QAACC,KAAK,EAAC,MAAM;QAACT,KAAK,EAAElD,IAAK;QAAC4D,KAAK,EAAC;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpD3D,OAAA,CAAC6D,UAAU;QAACC,KAAK,EAAC,UAAU;QAACT,KAAK,EAAE3C,MAAO;QAACqD,KAAK,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,EAGL/C,aAAa,CAACoD,GAAG,CAAC,CAACC,GAAgB,EAAEC,UAAU,KAAK;MACnD,oBAAQlE,OAAA;QAAsBiD,SAAS,EAAC,+DAA+D;QAAAC,QAAA,gBAErGlD,OAAA;UAAKiD,SAAS,EAAC,2GAA2G;UAAAC,QAAA,gBACxHlD,OAAA;YAAKmE,GAAG,EAAC,YAAY;YAACC,GAAG,EAAC,MAAM;YAACnB,SAAS,EAAC;UAAe;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7D3D,OAAA;YAAGiD,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EAAEe,GAAG,CAACI;UAAO;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3D3D,OAAA;YAAGiD,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAC;UAAK;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eAGN3D,OAAA;UAAKiD,SAAS,EAAC,gEAAgE;UAAAC,QAAA,EAC5Ee,GAAG,CAACnC,OAAO,CAACkC,GAAG,CAAC,CAACM,IAAqB,EAAE7B,KAAa,KAAK;YACzD,MAAMV,MAAM,GAAGuC,IAAI,CAACpE,KAAK,GAAG,OAAO,GAAGoE,IAAI,CAACnE,IAAI,GAAG,MAAM,GAAG,WAAW;YACtE,oBACEH,OAAA;cAEEiD,SAAS,EAAE,kGAAkGhD,YAAY,CAAC8B,MAAM,CAAC,EAAG;cAAAmB,QAAA,gBAEpIlD,OAAA;gBAAGiD,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAEoB,IAAI,CAACC;cAAS;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzD3D,OAAA;gBAAGiD,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAEoB,IAAI,CAACE;cAAI;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA,GAJxClB,KAAK;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKP,CAAC;UAEV,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAtBUO,UAAU;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuBvB,CAAC;IACR,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGV,CAAC;AAACtD,EAAA,CAtHID,aAAa;AAAAqE,EAAA,GAAbrE,aAAa;AAgInB,MAAMsE,QAAQ,GAAG;EACfC,GAAG,EAAE;IACHC,MAAM,EAAE,gBAAgB;IACxBJ,IAAI,EAAE;EACR,CAAC;EACDK,KAAK,EAAE;IACLD,MAAM,EAAE,kBAAkB;IAC1BJ,IAAI,EAAE;EACR,CAAC;EACDM,IAAI,EAAE;IACJF,MAAM,EAAE,iBAAiB;IACzBJ,IAAI,EAAE;EACR;AACF,CAAC;AAED,SAASX,UAAUA,CAAC;EAAEC,KAAK;EAAET,KAAK;EAAEU;AAAuB,CAAC,EAAE;EAC5D,MAAM/C,MAAM,GAAG,EAAE;EACjB,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,gBAAgB,GAAGF,MAAM,GAAGC,MAAM,GAAG,CAAC;EAC5C,MAAME,aAAa,GAAGD,gBAAgB,GAAG,CAAC,GAAGE,IAAI,CAACC,EAAE;EACpD,MAAMC,gBAAgB,GACpBH,aAAa,GAAIkC,KAAK,GAAG,GAAG,GAAIlC,aAAa;EAE/C,oBACEnB,OAAA;IAAKiD,SAAS,EAAC,qDAAqD;IAAAC,QAAA,gBAClElD,OAAA;MACE+E,MAAM,EAAC,MAAM;MACbC,KAAK,EAAC,MAAM;MACZ/B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAG3BlD,OAAA;QACEiB,MAAM,EAAC,SAAS,CAAC;QAAA;QACjBgE,IAAI,EAAC,aAAa;QAClBC,WAAW,EAAEjE,MAAO;QACpBkE,CAAC,EAAEjE,gBAAiB;QACpBkE,EAAE,EAAC,IAAI;QACPC,EAAE,EAAC;MAAI;QAAA7B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEF3D,OAAA;QACEiB,MAAM,EAAE8C,KAAM,CAAC;QAAA;QACfd,SAAS,EAAE,UAAUc,KAAK,MAAO,CAAC;QAAA;QAClCkB,IAAI,EAAC,aAAa;QAClBC,WAAW,EAAEjE,MAAO;QACpBqE,eAAe,EAAEnE,aAAc;QAC/BG,gBAAgB,EAAEA,gBAAiB;QACnCiE,aAAa,EAAC,OAAO;QACrBJ,CAAC,EAAEjE,gBAAiB;QACpBkE,EAAE,EAAC,IAAI;QACPC,EAAE,EAAC;MAAI;QAAA7B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN3D,OAAA;MAAKiD,SAAS,EAAC,uDAAuD;MAAAC,QAAA,gBACpElD,OAAA;QAAAkD,QAAA,EAAIY;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd3D,OAAA;QAAAkD,QAAA,GAAIG,KAAK,EAAC,GAAC;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC6B,GAAA,GA9CQ3B,UAAU;AAgDnB,eAAezD,aAAa;AAAC,IAAAqE,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}